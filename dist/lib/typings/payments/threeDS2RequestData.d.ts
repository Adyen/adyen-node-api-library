/**
 * Adyen Payment Service
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v46/authorise ```
 *
 * OpenAPI spec version: 46
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */ import { DeviceRenderOptions } from './deviceRenderOptions';
import { SDKEphemPubKey } from './sDKEphemPubKey';
export interface ThreeDS2RequestData {
    /**
     * If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/checkout/3d-secure-2/3ds2-checkout-authentication-only-integration), and not the payment authorisation.
     */
    authenticationOnly?: boolean;
    /**
     * Possibility to specify a preference for receiving a challenge from the issuer. Allowed values: * `noPreference` * `requestNoChallenge` * `requestChallenge`
     */
    challengeIndicator?: ThreeDS2RequestData.ChallengeIndicatorEnum;
    /**
     * The environment of the shopper. Allowed values: * `app` * `browser`
     */
    deviceChannel: string;
    deviceRenderOptions?: DeviceRenderOptions;
    /**
     * The `messageVersion` value indicating the 3D Secure 2 protocol version.
     */
    messageVersion?: string;
    /**
     * URL to where the issuer should send the `CRes`. Required if you are not using components for `channel` **Web** or if you are using classic integration `deviceChannel` **browser**.
     */
    notificationURL?: string;
    /**
     * The `sdkAppID` value as received from the 3D Secure 2 SDK. Required for `deviceChannel` set to **app**.
     */
    sdkAppID?: string;
    /**
     * The `sdkEncData` value as received from the 3D Secure 2 SDK. Required for `deviceChannel` set to **app**.
     */
    sdkEncData?: string;
    sdkEphemPubKey?: SDKEphemPubKey;
    /**
     * The maximum amount of time in minutes for the 3D Secure 2 authentication process. Only for `deviceChannel` set to **app**.
     */
    sdkMaxTimeout?: number;
    /**
     * The `sdkReferenceNumber` value as received from the 3D Secure 2 SDK. Only for `deviceChannel` set to **app**.
     */
    sdkReferenceNumber?: string;
    /**
     * The `sdkTransID` value as received from the 3D Secure 2 SDK. Only for `deviceChannel` set to **app**.
     */
    sdkTransID?: string;
    /**
     * Completion indicator for the device fingerprinting.
     */
    threeDSCompInd?: string;
    /**
     * Required for [authentication-only integration](https://docs.adyen.com/checkout/3d-secure-2/3ds2-checkout-authentication-only-integration) for Visa. Unique 3D Secure requestor identifier assigned by the Directory Server when you enrol for 3D Secure 2.
     */
    threeDSRequestorID?: string;
    /**
     * Required for [authentication-only integration](https://docs.adyen.com/checkout/3d-secure-2/3ds2-checkout-authentication-only-integration) for Visa. Unique 3D Secure requestor name assigned by the Directory Server when you enrol for 3D Secure 2.
     */
    threeDSRequestorName?: string;
    /**
     * URL of the (customer service) website that will be shown to the shopper in case of technical errors during the 3D Secure 2 process.
     */
    threeDSRequestorURL?: string;
}
export declare namespace ThreeDS2RequestData {
    type ChallengeIndicatorEnum = 'noPreference' | 'requestNoChallenge' | 'requestChallenge';
    const ChallengeIndicatorEnum: {
        NoPreference: import("../checkout").ThreeDS2RequestData.ChallengeIndicatorEnum;
        RequestNoChallenge: import("../checkout").ThreeDS2RequestData.ChallengeIndicatorEnum;
        RequestChallenge: import("../checkout").ThreeDS2RequestData.ChallengeIndicatorEnum;
    };
}
