/*
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class AccountSupportingEntityCapability {
    /**
    * Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
    */
    'allowed'?: boolean;
    /**
    * The capability level that is allowed for the account holder.  Possible values: **notApplicable**, **low**, **medium**, **high**.
    */
    'allowedLevel'?: AccountSupportingEntityCapability.AllowedLevelEnum;
    /**
    * Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
    */
    'enabled'?: boolean;
    /**
    * The ID of the supporting entity.
    */
    'id'?: string;
    /**
    * Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
    */
    'requested'?: boolean;
    /**
    * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.  Possible values: **notApplicable**, **low**, **medium**, **high**.
    */
    'requestedLevel'?: AccountSupportingEntityCapability.RequestedLevelEnum;
    /**
    * The status of the verification checks for the supporting entity capability.  Possible values:  * **pending**: Adyen is running the verification.  * **invalid**: The verification failed. Check if the `errors` array contains more information.  * **valid**: The verification has been successfully completed.  * **rejected**: Adyen has verified the information, but found reasons to not allow the capability. 
    */
    'verificationStatus'?: AccountSupportingEntityCapability.VerificationStatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "allowed",
            "baseName": "allowed",
            "type": "boolean"
        },
        {
            "name": "allowedLevel",
            "baseName": "allowedLevel",
            "type": "AccountSupportingEntityCapability.AllowedLevelEnum"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "requested",
            "baseName": "requested",
            "type": "boolean"
        },
        {
            "name": "requestedLevel",
            "baseName": "requestedLevel",
            "type": "AccountSupportingEntityCapability.RequestedLevelEnum"
        },
        {
            "name": "verificationStatus",
            "baseName": "verificationStatus",
            "type": "AccountSupportingEntityCapability.VerificationStatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return AccountSupportingEntityCapability.attributeTypeMap;
    }
}

export namespace AccountSupportingEntityCapability {
    export enum AllowedLevelEnum {
        High = <any> 'high',
        Low = <any> 'low',
        Medium = <any> 'medium',
        NotApplicable = <any> 'notApplicable'
    }
    export enum RequestedLevelEnum {
        High = <any> 'high',
        Low = <any> 'low',
        Medium = <any> 'medium',
        NotApplicable = <any> 'notApplicable'
    }
    export enum VerificationStatusEnum {
        Invalid = <any> 'invalid',
        Pending = <any> 'pending',
        Rejected = <any> 'rejected',
        Valid = <any> 'valid'
    }
}
