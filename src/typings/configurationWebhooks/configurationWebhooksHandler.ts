/*
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { configurationWebhooks } from "..";

/**
 * Union type for all supported webhook requests.
 * Allows generic handling of configuration-related webhook events.
 */
export type GenericWebhook = 
    | configurationWebhooks.AccountHolderNotificationRequest
    | configurationWebhooks.BalanceAccountNotificationRequest
    | configurationWebhooks.CardOrderNotificationRequest
    | configurationWebhooks.NetworkTokenNotificationRequest
    | configurationWebhooks.PaymentNotificationRequest
    | configurationWebhooks.SweepConfigurationNotificationRequest;

/**
 * Handler for processing ConfigurationWebhooks.
 * 
 * This class provides functionality to deserialize the payload of ConfigurationWebhooks events.
 */
export class ConfigurationWebhooksHandler {

    private readonly payload: Record<string, any>;

    public constructor(jsonPayload: string) {
        this.payload = JSON.parse(jsonPayload);
    }

    /**
     * This method checks the type of the webhook payload and returns the appropriate deserialized object.
     * 
     * @returns A deserialized object of type GenericWebhook.
     * @throws Error if the type is not recognized.
     */
    public getGenericWebhook(): GenericWebhook {
    
        const type = this.payload["type"];
        
        if(Object.values(configurationWebhooks.AccountHolderNotificationRequest.TypeEnum).includes(type)) {
            return this.getAccountHolderNotificationRequest();
        }
        
        if(Object.values(configurationWebhooks.BalanceAccountNotificationRequest.TypeEnum).includes(type)) {
            return this.getBalanceAccountNotificationRequest();
        }
        
        if(Object.values(configurationWebhooks.CardOrderNotificationRequest.TypeEnum).includes(type)) {
            return this.getCardOrderNotificationRequest();
        }
        
        if(Object.values(configurationWebhooks.NetworkTokenNotificationRequest.TypeEnum).includes(type)) {
            return this.getNetworkTokenNotificationRequest();
        }
        
        if(Object.values(configurationWebhooks.PaymentNotificationRequest.TypeEnum).includes(type)) {
            return this.getPaymentNotificationRequest();
        }
        
        if(Object.values(configurationWebhooks.SweepConfigurationNotificationRequest.TypeEnum).includes(type)) {
            return this.getSweepConfigurationNotificationRequest();
        }
        
        throw new Error("Could not parse the json payload: " + this.payload);

    }

    /**
     * Deserialize the webhook payload into a AccountHolderNotificationRequest
     *
     * @returns Deserialized AccountHolderNotificationRequest object.
     */
    public getAccountHolderNotificationRequest(): configurationWebhooks.AccountHolderNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "AccountHolderNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a BalanceAccountNotificationRequest
     *
     * @returns Deserialized BalanceAccountNotificationRequest object.
     */
    public getBalanceAccountNotificationRequest(): configurationWebhooks.BalanceAccountNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "BalanceAccountNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a CardOrderNotificationRequest
     *
     * @returns Deserialized CardOrderNotificationRequest object.
     */
    public getCardOrderNotificationRequest(): configurationWebhooks.CardOrderNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "CardOrderNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a NetworkTokenNotificationRequest
     *
     * @returns Deserialized NetworkTokenNotificationRequest object.
     */
    public getNetworkTokenNotificationRequest(): configurationWebhooks.NetworkTokenNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "NetworkTokenNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a PaymentNotificationRequest
     *
     * @returns Deserialized PaymentNotificationRequest object.
     */
    public getPaymentNotificationRequest(): configurationWebhooks.PaymentNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "PaymentNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a SweepConfigurationNotificationRequest
     *
     * @returns Deserialized SweepConfigurationNotificationRequest object.
     */
    public getSweepConfigurationNotificationRequest(): configurationWebhooks.SweepConfigurationNotificationRequest {
        return configurationWebhooks.ObjectSerializer.deserialize(this.payload, "SweepConfigurationNotificationRequest");
    }

}