/*
 * The version of the OpenAPI document: v6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class DocumentDetail {
    /**
    * The code of account holder, to which the document applies.
    */
    'accountHolderCode': string;
    /**
    * The Adyen-generated [`bankAccountUUID`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-bankAccountDetails-bankAccountUUID) to which the document must be linked. Refer to [Bank account check](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/bank-account-check#uploading-a-bank-statement) for details on when a document should be submitted. >Required if the `documentType` is **BANK_STATEMENT**, where a document is being submitted in order to verify a bank account. 
    */
    'bankAccountUUID'?: string;
    /**
    * Description of the document.
    */
    'description'?: string;
    /**
    * The type of the document. Refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks) for details on when each document type should be submitted and for the accepted file formats.  Permitted values: * **BANK_STATEMENT**: A file containing a bank statement or other document proving ownership of a specific bank account. * **COMPANY_REGISTRATION_SCREENING** (Supported from v5 and later): A file containing a company registration document. * **CONSTITUTIONAL_DOCUMENT**: A file containing information about the account holder\'s legal arrangement. * **PASSPORT**: A file containing the identity page(s) of a passport. * **ID_CARD_FRONT**: A file containing only the front of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted. * **ID_CARD_BACK**: A file containing only the back of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted. * **DRIVING_LICENCE_FRONT**: A file containing only the front of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_BACK** must be submitted. * **DRIVING_LICENCE_BACK**: A file containing only the back of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_FRONT** must be submitted. 
    */
    'documentType': DocumentDetail.DocumentTypeEnum;
    /**
    * Filename of the document.
    */
    'filename': string;
    /**
    * The Adyen-generated [`legalArrangementCode`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-legalArrangements-legalArrangementCode) to which the document must be linked.
    */
    'legalArrangementCode'?: string;
    /**
    * The Adyen-generated [`legalArrangementEntityCode`](https://docs.adyen.com/api-explorer/#/Account/v6/post/createAccountHolder__resParam_accountHolderDetails-legalArrangements-legalArrangementEntities-legalArrangementEntityCode)  to which the document must be linked.
    */
    'legalArrangementEntityCode'?: string;
    /**
    * The Adyen-generated [`shareholderCode`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-shareholders-shareholderCode) to which the document must be linked. Refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks) for details on when a document should be submitted. >Required if the account holder has a `legalEntity` of type **Business** and the `documentType` is either **PASSPORT**, **ID_CARD_FRONT**, **ID_CARD_BACK**, **DRIVING_LICENCE_FRONT**, or **DRIVING_LICENCE_BACK**. 
    */
    'shareholderCode'?: string;
    /**
    * The Adyen-generated [`signatoryCode`](https://docs.adyen.com/api-explorer/#/Account/v6/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-signatories-signatoryCode) to which the document must be linked.
    */
    'signatoryCode'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accountHolderCode",
            "baseName": "accountHolderCode",
            "type": "string"
        },
        {
            "name": "bankAccountUUID",
            "baseName": "bankAccountUUID",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "documentType",
            "baseName": "documentType",
            "type": "DocumentDetail.DocumentTypeEnum"
        },
        {
            "name": "filename",
            "baseName": "filename",
            "type": "string"
        },
        {
            "name": "legalArrangementCode",
            "baseName": "legalArrangementCode",
            "type": "string"
        },
        {
            "name": "legalArrangementEntityCode",
            "baseName": "legalArrangementEntityCode",
            "type": "string"
        },
        {
            "name": "shareholderCode",
            "baseName": "shareholderCode",
            "type": "string"
        },
        {
            "name": "signatoryCode",
            "baseName": "signatoryCode",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return DocumentDetail.attributeTypeMap;
    }
}

export namespace DocumentDetail {
    export enum DocumentTypeEnum {
        BankStatement = <any> 'BANK_STATEMENT',
        Bsn = <any> 'BSN',
        CompanyRegistrationScreening = <any> 'COMPANY_REGISTRATION_SCREENING',
        ConstitutionalDocument = <any> 'CONSTITUTIONAL_DOCUMENT',
        DrivingLicence = <any> 'DRIVING_LICENCE',
        DrivingLicenceBack = <any> 'DRIVING_LICENCE_BACK',
        DrivingLicenceFront = <any> 'DRIVING_LICENCE_FRONT',
        IdCard = <any> 'ID_CARD',
        IdCardBack = <any> 'ID_CARD_BACK',
        IdCardFront = <any> 'ID_CARD_FRONT',
        Passport = <any> 'PASSPORT',
        ProofOfResidency = <any> 'PROOF_OF_RESIDENCY',
        Ssn = <any> 'SSN',
        SupportingDocuments = <any> 'SUPPORTING_DOCUMENTS'
    }
}
