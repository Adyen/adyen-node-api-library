/*
 * The version of the OpenAPI document: v71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class ThreeDSRequestData {
    /**
    * Dimensions of the 3DS2 challenge window to be displayed to the cardholder.  Possible values:  * **01** - size of 250x400  * **02** - size of 390x400 * **03** - size of 500x600 * **04** - size of 600x400 * **05** - Fullscreen
    */
    "challengeWindowSize"?: ThreeDSRequestData.ChallengeWindowSizeEnum;
    /**
    * Required to trigger the [data-only flow](https://docs.adyen.com/online-payments/3d-secure/data-only/). When set to **true**, forces the 3D Secure 2 data-only flow for all transactions where it is possible. 
    */
    "dataOnly"?: ThreeDSRequestData.DataOnlyEnum;
    /**
    * Indicates if [native 3D Secure authentication](https://docs.adyen.com/online-payments/3d-secure/native-3ds2) should be triggered when available. Adyen can still select to fallback to the redirect flow to optimize authorization rates and improve the shopper\'s experience.  Possible values: * **preferred**: Use native 3D Secure authentication when available. * **disabled**: Use the redirect 3D Secure authentication flow.
    */
    "nativeThreeDS"?: ThreeDSRequestData.NativeThreeDSEnum;
    /**
    * The version of 3D Secure to use.  Possible values:  * **2.1.0** * **2.2.0**
    */
    "threeDSVersion"?: ThreeDSRequestData.ThreeDSVersionEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "challengeWindowSize",
            "baseName": "challengeWindowSize",
            "type": "ThreeDSRequestData.ChallengeWindowSizeEnum",
            "format": ""
        },
        {
            "name": "dataOnly",
            "baseName": "dataOnly",
            "type": "ThreeDSRequestData.DataOnlyEnum",
            "format": ""
        },
        {
            "name": "nativeThreeDS",
            "baseName": "nativeThreeDS",
            "type": "ThreeDSRequestData.NativeThreeDSEnum",
            "format": ""
        },
        {
            "name": "threeDSVersion",
            "baseName": "threeDSVersion",
            "type": "ThreeDSRequestData.ThreeDSVersionEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ThreeDSRequestData.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace ThreeDSRequestData {
    export enum ChallengeWindowSizeEnum {
        _01 = '01',
        _02 = '02',
        _03 = '03',
        _04 = '04',
        _05 = '05'
    }
    export enum DataOnlyEnum {
        False = 'false',
        True = 'true'
    }
    export enum NativeThreeDSEnum {
        Preferred = 'preferred',
        Disabled = 'disabled'
    }
    export enum ThreeDSVersionEnum {
        _210 = '2.1.0',
        _220 = '2.2.0'
    }
}
