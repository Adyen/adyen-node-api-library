/*
 * The version of the OpenAPI document: v71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { AchDetails } from './achDetails';
import { AffirmDetails } from './affirmDetails';
import { AfterpayDetails } from './afterpayDetails';
import { AmazonPayDetails } from './amazonPayDetails';
import { AncvDetails } from './ancvDetails';
import { AndroidPayDetails } from './androidPayDetails';
import { ApplePayDetails } from './applePayDetails';
import { BacsDirectDebitDetails } from './bacsDirectDebitDetails';
import { BillDeskDetails } from './billDeskDetails';
import { BlikDetails } from './blikDetails';
import { CardDetails } from './cardDetails';
import { CashAppDetails } from './cashAppDetails';
import { CellulantDetails } from './cellulantDetails';
import { DokuDetails } from './dokuDetails';
import { DotpayDetails } from './dotpayDetails';
import { DragonpayDetails } from './dragonpayDetails';
import { EBankingFinlandDetails } from './eBankingFinlandDetails';
import { EcontextVoucherDetails } from './econtextVoucherDetails';
import { EftDetails } from './eftDetails';
import { FastlaneDetails } from './fastlaneDetails';
import { GenericIssuerPaymentMethodDetails } from './genericIssuerPaymentMethodDetails';
import { GiropayDetails } from './giropayDetails';
import { GooglePayDetails } from './googlePayDetails';
import { IdealDetails } from './idealDetails';
import { KlarnaDetails } from './klarnaDetails';
import { MasterpassDetails } from './masterpassDetails';
import { MbwayDetails } from './mbwayDetails';
import { MobilePayDetails } from './mobilePayDetails';
import { MolPayDetails } from './molPayDetails';
import { OpenInvoiceDetails } from './openInvoiceDetails';
import { PayByBankAISDirectDebitDetails } from './payByBankAISDirectDebitDetails';
import { PayByBankDetails } from './payByBankDetails';
import { PayPalDetails } from './payPalDetails';
import { PayPayDetails } from './payPayDetails';
import { PayToDetails } from './payToDetails';
import { PayUUpiDetails } from './payUUpiDetails';
import { PayWithGoogleDetails } from './payWithGoogleDetails';
import { PaymentDetails } from './paymentDetails';
import { PixDetails } from './pixDetails';
import { PixRecurring } from './pixRecurring';
import { PseDetails } from './pseDetails';
import { RatepayDetails } from './ratepayDetails';
import { RivertyDetails } from './rivertyDetails';
import { SamsungPayDetails } from './samsungPayDetails';
import { SepaDirectDebitDetails } from './sepaDirectDebitDetails';
import { StoredPaymentMethodDetails } from './storedPaymentMethodDetails';
import { TwintDetails } from './twintDetails';
import { UpiCollectDetails } from './upiCollectDetails';
import { UpiIntentDetails } from './upiIntentDetails';
import { VippsDetails } from './vippsDetails';
import { VisaCheckoutDetails } from './visaCheckoutDetails';
import { WeChatPayDetails } from './weChatPayDetails';
import { WeChatPayMiniProgramDetails } from './weChatPayMiniProgramDetails';
import { ZipDetails } from './zipDetails';

/**
* The type and required details of a payment method to use.
*/
export class PaymentRequestPaymentMethod {
    /**
    * The account holder type (personal or business).
    */
    'accountHolderType'?: PaymentRequestPaymentMethod.AccountHolderTypeEnum;
    /**
    * The bank account number (without separators).
    */
    'bankAccountNumber'?: string;
    /**
    * The bank account type (checking, savings...).
    */
    'bankAccountType'?: PaymentRequestPaymentMethod.BankAccountTypeEnum;
    /**
    * The bank routing number of the account.
    */
    'bankLocationId'?: string;
    /**
    * The checkout attempt identifier.
    */
    'checkoutAttemptId'?: string;
    /**
    * Encrypted bank account number. The bank account number (without separators).
    */
    'encryptedBankAccountNumber'?: string;
    /**
    * Encrypted location id. The bank routing number of the account. The field value is `nil` in most cases.
    */
    'encryptedBankLocationId'?: string;
    /**
    * The name of the bank account holder.
    */
    'ownerName': string;
    /**
    * This is the `recurringDetailReference` returned in the response when you created the token.
    *
	* @deprecated since Adyen Checkout API v49
	* Use `storedPaymentMethodId` instead.
    */
    'recurringDetailReference'?: string;
    /**
    * This is the `recurringDetailReference` returned in the response when you created the token.
    */
    'storedPaymentMethodId'?: string;
    /**
    * The unique identifier of your user\'s verified transfer instrument, which you can use to top up their balance accounts.
    */
    'transferInstrumentId'?: string;
    /**
    * **ach**
    */
    'type': PaymentRequestPaymentMethod.TypeEnum = PaymentRequestPaymentMethod.TypeEnum.Ach;
    /**
    * The address where to send the invoice.
    */
    'billingAddress'?: string;
    /**
    * The address where the goods should be delivered.
    */
    'deliveryAddress'?: string;
    /**
    * Shopper name, date of birth, phone number, and email address.
    */
    'personalDetails'?: string;
    /**
    * This is the `amazonPayToken` that you obtained from the [Get Checkout Session](https://amazon-pay-acquirer-guide.s3-eu-west-1.amazonaws.com/v1/amazon-pay-api-v2/checkout-session.html#get-checkout-session) response. This token is used for API only integration specifically.
    */
    'amazonPayToken'?: string;
    /**
    * The `checkoutSessionId` is used to identify the checkout session at the Amazon Pay side. This field is required only for drop-in and components integration, where it replaces the amazonPayToken.
    */
    'checkoutSessionId'?: string;
    /**
    * ANCV account identification (email or account number)
    */
    'beneficiaryId'?: string;
    /**
    * The stringified and base64 encoded `paymentData` you retrieved from the Apple framework.
    */
    'applePayToken': string;
    /**
    * The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
    */
    'fundingSource'?: PaymentRequestPaymentMethod.FundingSourceEnum;
    /**
    * The name of the card holder.
    */
    'holderName'?: string;
    /**
    * The PayByBank issuer value of the shopper\'s selected bank.
    */
    'issuer': string;
    /**
    * BLIK code consisting of 6 digits.
    */
    'blikCode'?: string;
    /**
    * Secondary brand of the card. For example: **plastix**, **hmclub**.
    */
    'brand'?: string;
    /**
	* @deprecated 
    */
    'cupsecureplus_smscode'?: string;
    /**
    * The card verification code. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'cvc'?: string;
    /**
    * Only include this for JSON Web Encryption (JWE) implementations. The JWE-encrypted card details.
    */
    'encryptedCard'?: string;
    /**
    * The encrypted card number.
    */
    'encryptedCardNumber'?: string;
    /**
    * The encrypted card expiry month.
    */
    'encryptedExpiryMonth'?: string;
    /**
    * The encrypted card expiry year.
    */
    'encryptedExpiryYear'?: string;
    /**
    * The encrypted card verification code.
    */
    'encryptedSecurityCode'?: string;
    /**
    * The card expiry month. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'expiryMonth'?: string;
    /**
    * The card expiry year. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'expiryYear'?: string;
    /**
    * The encoded fastlane data blob
    */
    'fastlaneData': string;
    /**
    * The transaction identifier from card schemes. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference) from the response to the first payment.
    */
    'networkPaymentReference'?: string;
    /**
    * The card number. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'number'?: string;
    /**
    * The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.
    */
    'shopperNotificationReference'?: string;
    /**
    * An identifier used for the Click to Pay transaction.
    */
    'srcCorrelationId'?: string;
    /**
    * The SRC reference for the Click to Pay token.
    */
    'srcDigitalCardId'?: string;
    /**
    * The scheme that is being used for Click to Pay.
    */
    'srcScheme'?: string;
    /**
    * The reference for the Click to Pay token.
    */
    'srcTokenReference'?: string;
    /**
    * Required for mobile integrations. Version of the 3D Secure 2 mobile SDK.
    */
    'threeDS2SdkVersion'?: string;
    /**
    * Cash App issued cashtag for recurring payment
    */
    'cashtag'?: string;
    /**
    * Cash App issued customerId for recurring payment
    */
    'customerId'?: string;
    /**
    * Cash App issued grantId for one time payment
    */
    'grantId'?: string;
    /**
    * Cash App issued onFileGrantId for recurring payment
    */
    'onFileGrantId'?: string;
    /**
    * Cash App request id
    */
    'requestId'?: string;
    /**
    * The type of flow to initiate.
    */
    'subtype'?: string;
    /**
    * The shopper\'s first name.
    */
    'firstName': string;
    /**
    * The shopper\'s last name.
    */
    'lastName': string;
    /**
    * 
    */
    'shopperEmail': string;
    /**
    * 
    */
    'telephoneNumber': string;
    /**
    * The financial institution code.
    */
    'bankCode'?: string;
    /**
    * The selected payment card network. 
    */
    'googlePayCardNetwork'?: string;
    /**
    * The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
    */
    'googlePayToken': string;
    /**
    * The Masterpass transaction ID.
    */
    'masterpassTransactionId': string;
    /**
    * The unique ID associated with the order.
    */
    'orderID'?: string;
    /**
    * IMMEDIATE_PAYMENT_REQUIRED or UNRESTRICTED
    */
    'payeePreferred'?: string;
    /**
    * The unique ID associated with the payer.
    */
    'payerID'?: string;
    /**
    * PAYPAL or PAYPAL_CREDIT
    */
    'payerSelected'?: string;
    /**
    * The shopper\'s banking details or payId reference, used to complete payment.
    */
    'shopperAccountIdentifier'?: string;
    /**
    * The virtual payment address for UPI.
    */
    'virtualPaymentAddress'?: string;
    'pixRecurring'?: PixRecurring;
    /**
    * The shopper\'s bank.
    */
    'bank': string;
    /**
    * The client type.
    */
    'clientType': string;
    /**
    * The identification code.
    */
    'identification': string;
    /**
    * The identification type.
    */
    'identificationType': string;
    /**
    * A string containing the shopper\'s device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).
    */
    'deviceFingerprint'?: string;
    /**
    * The International Bank Account Number (IBAN).
    */
    'iban': string;
    /**
    * The payload you received from the Samsung Pay SDK response.
    */
    'samsungPayToken': string;
    /**
    * The sequence number for the debit. For example, send **2** if this is the second debit for the subscription. The sequence number is included in the notification sent to the shopper.
    */
    'billingSequenceNumber': string;
    'appId'?: string;
    /**
    * The Visa Click to Pay Call ID value. When your shopper selects a payment and/or a shipping address from Visa Click to Pay, you will receive a Visa Click to Pay Call ID.
    */
    'visaCheckoutCallId': string;
    'openid'?: string;
    /**
    * Set this to **true** if the shopper would like to pick up and collect their order, instead of having the goods delivered to them.
    */
    'clickAndCollect'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accountHolderType",
            "baseName": "accountHolderType",
            "type": "PaymentRequestPaymentMethod.AccountHolderTypeEnum"
        },
        {
            "name": "bankAccountNumber",
            "baseName": "bankAccountNumber",
            "type": "string"
        },
        {
            "name": "bankAccountType",
            "baseName": "bankAccountType",
            "type": "PaymentRequestPaymentMethod.BankAccountTypeEnum"
        },
        {
            "name": "bankLocationId",
            "baseName": "bankLocationId",
            "type": "string"
        },
        {
            "name": "checkoutAttemptId",
            "baseName": "checkoutAttemptId",
            "type": "string"
        },
        {
            "name": "encryptedBankAccountNumber",
            "baseName": "encryptedBankAccountNumber",
            "type": "string"
        },
        {
            "name": "encryptedBankLocationId",
            "baseName": "encryptedBankLocationId",
            "type": "string"
        },
        {
            "name": "ownerName",
            "baseName": "ownerName",
            "type": "string"
        },
        {
            "name": "recurringDetailReference",
            "baseName": "recurringDetailReference",
            "type": "string"
        },
        {
            "name": "storedPaymentMethodId",
            "baseName": "storedPaymentMethodId",
            "type": "string"
        },
        {
            "name": "transferInstrumentId",
            "baseName": "transferInstrumentId",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentRequestPaymentMethod.TypeEnum"
        },
        {
            "name": "billingAddress",
            "baseName": "billingAddress",
            "type": "string"
        },
        {
            "name": "deliveryAddress",
            "baseName": "deliveryAddress",
            "type": "string"
        },
        {
            "name": "personalDetails",
            "baseName": "personalDetails",
            "type": "string"
        },
        {
            "name": "amazonPayToken",
            "baseName": "amazonPayToken",
            "type": "string"
        },
        {
            "name": "checkoutSessionId",
            "baseName": "checkoutSessionId",
            "type": "string"
        },
        {
            "name": "beneficiaryId",
            "baseName": "beneficiaryId",
            "type": "string"
        },
        {
            "name": "applePayToken",
            "baseName": "applePayToken",
            "type": "string"
        },
        {
            "name": "fundingSource",
            "baseName": "fundingSource",
            "type": "PaymentRequestPaymentMethod.FundingSourceEnum"
        },
        {
            "name": "holderName",
            "baseName": "holderName",
            "type": "string"
        },
        {
            "name": "issuer",
            "baseName": "issuer",
            "type": "string"
        },
        {
            "name": "blikCode",
            "baseName": "blikCode",
            "type": "string"
        },
        {
            "name": "brand",
            "baseName": "brand",
            "type": "string"
        },
        {
            "name": "cupsecureplus_smscode",
            "baseName": "cupsecureplus.smscode",
            "type": "string"
        },
        {
            "name": "cvc",
            "baseName": "cvc",
            "type": "string"
        },
        {
            "name": "encryptedCard",
            "baseName": "encryptedCard",
            "type": "string"
        },
        {
            "name": "encryptedCardNumber",
            "baseName": "encryptedCardNumber",
            "type": "string"
        },
        {
            "name": "encryptedExpiryMonth",
            "baseName": "encryptedExpiryMonth",
            "type": "string"
        },
        {
            "name": "encryptedExpiryYear",
            "baseName": "encryptedExpiryYear",
            "type": "string"
        },
        {
            "name": "encryptedSecurityCode",
            "baseName": "encryptedSecurityCode",
            "type": "string"
        },
        {
            "name": "expiryMonth",
            "baseName": "expiryMonth",
            "type": "string"
        },
        {
            "name": "expiryYear",
            "baseName": "expiryYear",
            "type": "string"
        },
        {
            "name": "fastlaneData",
            "baseName": "fastlaneData",
            "type": "string"
        },
        {
            "name": "networkPaymentReference",
            "baseName": "networkPaymentReference",
            "type": "string"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string"
        },
        {
            "name": "shopperNotificationReference",
            "baseName": "shopperNotificationReference",
            "type": "string"
        },
        {
            "name": "srcCorrelationId",
            "baseName": "srcCorrelationId",
            "type": "string"
        },
        {
            "name": "srcDigitalCardId",
            "baseName": "srcDigitalCardId",
            "type": "string"
        },
        {
            "name": "srcScheme",
            "baseName": "srcScheme",
            "type": "string"
        },
        {
            "name": "srcTokenReference",
            "baseName": "srcTokenReference",
            "type": "string"
        },
        {
            "name": "threeDS2SdkVersion",
            "baseName": "threeDS2SdkVersion",
            "type": "string"
        },
        {
            "name": "cashtag",
            "baseName": "cashtag",
            "type": "string"
        },
        {
            "name": "customerId",
            "baseName": "customerId",
            "type": "string"
        },
        {
            "name": "grantId",
            "baseName": "grantId",
            "type": "string"
        },
        {
            "name": "onFileGrantId",
            "baseName": "onFileGrantId",
            "type": "string"
        },
        {
            "name": "requestId",
            "baseName": "requestId",
            "type": "string"
        },
        {
            "name": "subtype",
            "baseName": "subtype",
            "type": "string"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string"
        },
        {
            "name": "shopperEmail",
            "baseName": "shopperEmail",
            "type": "string"
        },
        {
            "name": "telephoneNumber",
            "baseName": "telephoneNumber",
            "type": "string"
        },
        {
            "name": "bankCode",
            "baseName": "bankCode",
            "type": "string"
        },
        {
            "name": "googlePayCardNetwork",
            "baseName": "googlePayCardNetwork",
            "type": "string"
        },
        {
            "name": "googlePayToken",
            "baseName": "googlePayToken",
            "type": "string"
        },
        {
            "name": "masterpassTransactionId",
            "baseName": "masterpassTransactionId",
            "type": "string"
        },
        {
            "name": "orderID",
            "baseName": "orderID",
            "type": "string"
        },
        {
            "name": "payeePreferred",
            "baseName": "payeePreferred",
            "type": "string"
        },
        {
            "name": "payerID",
            "baseName": "payerID",
            "type": "string"
        },
        {
            "name": "payerSelected",
            "baseName": "payerSelected",
            "type": "string"
        },
        {
            "name": "shopperAccountIdentifier",
            "baseName": "shopperAccountIdentifier",
            "type": "string"
        },
        {
            "name": "virtualPaymentAddress",
            "baseName": "virtualPaymentAddress",
            "type": "string"
        },
        {
            "name": "pixRecurring",
            "baseName": "pixRecurring",
            "type": "PixRecurring"
        },
        {
            "name": "bank",
            "baseName": "bank",
            "type": "string"
        },
        {
            "name": "clientType",
            "baseName": "clientType",
            "type": "string"
        },
        {
            "name": "identification",
            "baseName": "identification",
            "type": "string"
        },
        {
            "name": "identificationType",
            "baseName": "identificationType",
            "type": "string"
        },
        {
            "name": "deviceFingerprint",
            "baseName": "deviceFingerprint",
            "type": "string"
        },
        {
            "name": "iban",
            "baseName": "iban",
            "type": "string"
        },
        {
            "name": "samsungPayToken",
            "baseName": "samsungPayToken",
            "type": "string"
        },
        {
            "name": "billingSequenceNumber",
            "baseName": "billingSequenceNumber",
            "type": "string"
        },
        {
            "name": "appId",
            "baseName": "appId",
            "type": "string"
        },
        {
            "name": "visaCheckoutCallId",
            "baseName": "visaCheckoutCallId",
            "type": "string"
        },
        {
            "name": "openid",
            "baseName": "openid",
            "type": "string"
        },
        {
            "name": "clickAndCollect",
            "baseName": "clickAndCollect",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PaymentRequestPaymentMethod.attributeTypeMap;
    }
}

export namespace PaymentRequestPaymentMethod {
    export enum AccountHolderTypeEnum {
        Business = <any> 'business',
        Personal = <any> 'personal'
    }
    export enum BankAccountTypeEnum {
        Balance = <any> 'balance',
        Checking = <any> 'checking',
        Deposit = <any> 'deposit',
        General = <any> 'general',
        Other = <any> 'other',
        Payment = <any> 'payment',
        Savings = <any> 'savings'
    }
    export enum TypeEnum {
        Ach = <any> 'ach',
        AchPlaid = <any> 'ach_plaid',
        Affirm = <any> 'affirm',
        AfterpayDefault = <any> 'afterpay_default',
        Afterpaytouch = <any> 'afterpaytouch',
        AfterpayB2b = <any> 'afterpay_b2b',
        Clearpay = <any> 'clearpay',
        Amazonpay = <any> 'amazonpay',
        Ancv = <any> 'ancv',
        Androidpay = <any> 'androidpay',
        Applepay = <any> 'applepay',
        DirectdebitGb = <any> 'directdebit_GB',
        BilldeskOnline = <any> 'billdesk_online',
        BilldeskWallet = <any> 'billdesk_wallet',
        Blik = <any> 'blik',
        Bcmc = <any> 'bcmc',
        Scheme = <any> 'scheme',
        NetworkToken = <any> 'networkToken',
        Giftcard = <any> 'giftcard',
        Card = <any> 'card',
        Clicktopay = <any> 'clicktopay',
        Cashapp = <any> 'cashapp',
        Cellulant = <any> 'cellulant',
        DokuMandiriVa = <any> 'doku_mandiri_va',
        DokuCimbVa = <any> 'doku_cimb_va',
        DokuDanamonVa = <any> 'doku_danamon_va',
        DokuBniVa = <any> 'doku_bni_va',
        DokuPermataLiteAtm = <any> 'doku_permata_lite_atm',
        DokuBriVa = <any> 'doku_bri_va',
        DokuBcaVa = <any> 'doku_bca_va',
        DokuAlfamart = <any> 'doku_alfamart',
        DokuIndomaret = <any> 'doku_indomaret',
        DokuWallet = <any> 'doku_wallet',
        DokuOvo = <any> 'doku_ovo',
        Dotpay = <any> 'dotpay',
        DragonpayEbanking = <any> 'dragonpay_ebanking',
        DragonpayOtcBanking = <any> 'dragonpay_otc_banking',
        DragonpayOtcNonBanking = <any> 'dragonpay_otc_non_banking',
        DragonpayOtcPhilippines = <any> 'dragonpay_otc_philippines',
        EbankingFi = <any> 'ebanking_FI',
        EcontextSevenEleven = <any> 'econtext_seven_eleven',
        EcontextOnline = <any> 'econtext_online',
        Econtext = <any> 'econtext',
        EcontextStores = <any> 'econtext_stores',
        EcontextAtm = <any> 'econtext_atm',
        EftDirectdebitCa = <any> 'eft_directdebit_CA',
        Fastlane = <any> 'fastlane',
        OnlineBankingPl = <any> 'onlineBanking_PL',
        Eps = <any> 'eps',
        OnlineBankingSk = <any> 'onlineBanking_SK',
        OnlineBankingCz = <any> 'onlineBanking_CZ',
        Giropay = <any> 'giropay',
        Googlepay = <any> 'googlepay',
        Ideal = <any> 'ideal',
        Klarna = <any> 'klarna',
        Klarnapayments = <any> 'klarnapayments',
        KlarnapaymentsAccount = <any> 'klarnapayments_account',
        KlarnapaymentsB2b = <any> 'klarnapayments_b2b',
        KlarnaPaynow = <any> 'klarna_paynow',
        KlarnaAccount = <any> 'klarna_account',
        KlarnaB2b = <any> 'klarna_b2b',
        Masterpass = <any> 'masterpass',
        Mbway = <any> 'mbway',
        Mobilepay = <any> 'mobilepay',
        MolpayEbankingFpxMy = <any> 'molpay_ebanking_fpx_MY',
        MolpayEbankingTh = <any> 'molpay_ebanking_TH',
        Openinvoice = <any> 'openinvoice',
        AfterpayDirectdebit = <any> 'afterpay_directdebit',
        AtomePos = <any> 'atome_pos',
        PaybybankAisDd = <any> 'paybybank_AIS_DD',
        Paybybank = <any> 'paybybank',
        Paypal = <any> 'paypal',
        Paypay = <any> 'paypay',
        Payto = <any> 'payto',
        PayuInUpi = <any> 'payu_IN_upi',
        Paywithgoogle = <any> 'paywithgoogle',
        Alipay = <any> 'alipay',
        Multibanco = <any> 'multibanco',
        BankTransferIban = <any> 'bankTransfer_IBAN',
        Paybright = <any> 'paybright',
        Paynow = <any> 'paynow',
        AffirmPos = <any> 'affirm_pos',
        Trustly = <any> 'trustly',
        Trustlyvector = <any> 'trustlyvector',
        Oney = <any> 'oney',
        Facilypay = <any> 'facilypay',
        Facilypay3x = <any> 'facilypay_3x',
        Facilypay4x = <any> 'facilypay_4x',
        Facilypay6x = <any> 'facilypay_6x',
        Facilypay10x = <any> 'facilypay_10x',
        Facilypay12x = <any> 'facilypay_12x',
        Unionpay = <any> 'unionpay',
        KcpBanktransfer = <any> 'kcp_banktransfer',
        KcpPayco = <any> 'kcp_payco',
        KcpCreditcard = <any> 'kcp_creditcard',
        WechatpaySdk = <any> 'wechatpaySDK',
        WechatpayQr = <any> 'wechatpayQR',
        WechatpayWeb = <any> 'wechatpayWeb',
        MolpayBoost = <any> 'molpay_boost',
        WalletIn = <any> 'wallet_IN',
        PayuInCashcard = <any> 'payu_IN_cashcard',
        PayuInNb = <any> 'payu_IN_nb',
        UpiQr = <any> 'upi_qr',
        Paytm = <any> 'paytm',
        MolpayEbankingVn = <any> 'molpay_ebanking_VN',
        MolpayEbankingMy = <any> 'molpay_ebanking_MY',
        MolpayEbankingDirectMy = <any> 'molpay_ebanking_direct_MY',
        Swish = <any> 'swish',
        Bizum = <any> 'bizum',
        Walley = <any> 'walley',
        WalleyB2b = <any> 'walley_b2b',
        Alma = <any> 'alma',
        Paypo = <any> 'paypo',
        Scalapay = <any> 'scalapay',
        Scalapay3x = <any> 'scalapay_3x',
        Scalapay4x = <any> 'scalapay_4x',
        MolpayFpx = <any> 'molpay_fpx',
        Konbini = <any> 'konbini',
        DirectEbanking = <any> 'directEbanking',
        Boletobancario = <any> 'boletobancario',
        Neteller = <any> 'neteller',
        Paysafecard = <any> 'paysafecard',
        Cashticket = <any> 'cashticket',
        Ikano = <any> 'ikano',
        Karenmillen = <any> 'karenmillen',
        Oasis = <any> 'oasis',
        Warehouse = <any> 'warehouse',
        PrimeiropayBoleto = <any> 'primeiropay_boleto',
        Mada = <any> 'mada',
        Benefit = <any> 'benefit',
        Knet = <any> 'knet',
        Omannet = <any> 'omannet',
        GopayWallet = <any> 'gopay_wallet',
        KcpNaverpay = <any> 'kcp_naverpay',
        OnlinebankingIn = <any> 'onlinebanking_IN',
        Fawry = <any> 'fawry',
        Atome = <any> 'atome',
        Moneybookers = <any> 'moneybookers',
        Naps = <any> 'naps',
        Nordea = <any> 'nordea',
        BoletobancarioBradesco = <any> 'boletobancario_bradesco',
        BoletobancarioItau = <any> 'boletobancario_itau',
        BoletobancarioSantander = <any> 'boletobancario_santander',
        BoletobancarioBancodobrasil = <any> 'boletobancario_bancodobrasil',
        BoletobancarioHsbc = <any> 'boletobancario_hsbc',
        MolpayMaybank2u = <any> 'molpay_maybank2u',
        MolpayCimb = <any> 'molpay_cimb',
        MolpayRhb = <any> 'molpay_rhb',
        MolpayAmb = <any> 'molpay_amb',
        MolpayHlb = <any> 'molpay_hlb',
        MolpayAffinEpg = <any> 'molpay_affin_epg',
        MolpayBankislam = <any> 'molpay_bankislam',
        MolpayPublicbank = <any> 'molpay_publicbank',
        FpxAgrobank = <any> 'fpx_agrobank',
        Touchngo = <any> 'touchngo',
        Maybank2uMae = <any> 'maybank2u_mae',
        Duitnow = <any> 'duitnow',
        Promptpay = <any> 'promptpay',
        TwintPos = <any> 'twint_pos',
        AlipayHk = <any> 'alipay_hk',
        AlipayHkWeb = <any> 'alipay_hk_web',
        AlipayHkWap = <any> 'alipay_hk_wap',
        AlipayWap = <any> 'alipay_wap',
        Balanceplatform = <any> 'balanceplatform',
        Pix = <any> 'pix',
        PsePayulatam = <any> 'pse_payulatam',
        Ratepay = <any> 'ratepay',
        RatepayDirectdebit = <any> 'ratepay_directdebit',
        Riverty = <any> 'riverty',
        RivertyAccount = <any> 'riverty_account',
        SepadirectdebitRiverty = <any> 'sepadirectdebit_riverty',
        Samsungpay = <any> 'samsungpay',
        Sepadirectdebit = <any> 'sepadirectdebit',
        SepadirectdebitAmazonpay = <any> 'sepadirectdebit_amazonpay',
        BcmcMobile = <any> 'bcmc_mobile',
        BcmcMobileQr = <any> 'bcmc_mobile_QR',
        BcmcMobileApp = <any> 'bcmc_mobile_app',
        MomoWallet = <any> 'momo_wallet',
        MomoWalletApp = <any> 'momo_wallet_app',
        PaymayaWallet = <any> 'paymaya_wallet',
        GrabpaySg = <any> 'grabpay_SG',
        GrabpayMy = <any> 'grabpay_MY',
        GrabpayTh = <any> 'grabpay_TH',
        GrabpayId = <any> 'grabpay_ID',
        GrabpayVn = <any> 'grabpay_VN',
        GrabpayPh = <any> 'grabpay_PH',
        Oxxo = <any> 'oxxo',
        Gcash = <any> 'gcash',
        Dana = <any> 'dana',
        Kakaopay = <any> 'kakaopay',
        Truemoney = <any> 'truemoney',
        Twint = <any> 'twint',
        UpiCollect = <any> 'upi_collect',
        UpiIntent = <any> 'upi_intent',
        Vipps = <any> 'vipps',
        Visacheckout = <any> 'visacheckout',
        Wechatpay = <any> 'wechatpay',
        WechatpayPos = <any> 'wechatpay_pos',
        WechatpayMiniProgram = <any> 'wechatpayMiniProgram',
        Zip = <any> 'zip',
        ZipPos = <any> 'zip_pos'
    }
    export enum FundingSourceEnum {
        Credit = <any> 'credit',
        Debit = <any> 'debit'
    }
}
