/*
 * The version of the OpenAPI document: v71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { AchDetails } from './achDetails';
import { AfterpayDetails } from './afterpayDetails';
import { AmazonPayDetails } from './amazonPayDetails';
import { AncvDetails } from './ancvDetails';
import { AndroidPayDetails } from './androidPayDetails';
import { ApplePayDetails } from './applePayDetails';
import { BacsDirectDebitDetails } from './bacsDirectDebitDetails';
import { BillDeskDetails } from './billDeskDetails';
import { BlikDetails } from './blikDetails';
import { CardDetails } from './cardDetails';
import { CellulantDetails } from './cellulantDetails';
import { DokuDetails } from './dokuDetails';
import { DotpayDetails } from './dotpayDetails';
import { DragonpayDetails } from './dragonpayDetails';
import { EcontextVoucherDetails } from './econtextVoucherDetails';
import { GenericIssuerPaymentMethodDetails } from './genericIssuerPaymentMethodDetails';
import { GiropayDetails } from './giropayDetails';
import { GooglePayDetails } from './googlePayDetails';
import { IdealDetails } from './idealDetails';
import { KlarnaDetails } from './klarnaDetails';
import { MasterpassDetails } from './masterpassDetails';
import { MbwayDetails } from './mbwayDetails';
import { MobilePayDetails } from './mobilePayDetails';
import { MolPayDetails } from './molPayDetails';
import { OpenInvoiceDetails } from './openInvoiceDetails';
import { PayPalDetails } from './payPalDetails';
import { PayUUpiDetails } from './payUUpiDetails';
import { PayWithGoogleDetails } from './payWithGoogleDetails';
import { PaymentDetails } from './paymentDetails';
import { RatepayDetails } from './ratepayDetails';
import { SamsungPayDetails } from './samsungPayDetails';
import { SepaDirectDebitDetails } from './sepaDirectDebitDetails';
import { StoredPaymentMethodDetails } from './storedPaymentMethodDetails';
import { UpiCollectDetails } from './upiCollectDetails';
import { UpiIntentDetails } from './upiIntentDetails';
import { VippsDetails } from './vippsDetails';
import { VisaCheckoutDetails } from './visaCheckoutDetails';
import { WeChatPayDetails } from './weChatPayDetails';
import { WeChatPayMiniProgramDetails } from './weChatPayMiniProgramDetails';
import { ZipDetails } from './zipDetails';

/**
* The type and required details of a payment method to use.
*/
export class PaymentRequestPaymentMethod {
    /**
    * The bank account number (without separators).
    */
    'bankAccountNumber'?: string;
    /**
    * The bank account type (checking, savings...).
    */
    'bankAccountType'?: PaymentRequestPaymentMethod.BankAccountTypeEnum;
    /**
    * The bank routing number of the account.
    */
    'bankLocationId'?: string;
    /**
    * The checkout attempt identifier.
    */
    'checkoutAttemptId'?: string;
    /**
    * Encrypted bank account number. The bank account number (without separators).
    */
    'encryptedBankAccountNumber'?: string;
    /**
    * Encrypted location id. The bank routing number of the account. The field value is `nil` in most cases.
    */
    'encryptedBankLocationId'?: string;
    /**
    * The name of the bank account holder.
    */
    'ownerName': string;
    /**
    * This is the `recurringDetailReference` returned in the response when you created the token.
    */
    'recurringDetailReference'?: string;
    /**
    * This is the `recurringDetailReference` returned in the response when you created the token.
    */
    'storedPaymentMethodId'?: string;
    /**
    * **ach**
    */
    'type': PaymentRequestPaymentMethod.TypeEnum;
    /**
    * The address where to send the invoice.
    */
    'billingAddress'?: string;
    /**
    * The address where the goods should be delivered.
    */
    'deliveryAddress'?: string;
    /**
    * Shopper name, date of birth, phone number, and email address.
    */
    'personalDetails'?: string;
    /**
    * This is the `amazonPayToken` that you obtained from the [Get Checkout Session](https://amazon-pay-acquirer-guide.s3-eu-west-1.amazonaws.com/v1/amazon-pay-api-v2/checkout-session.html#get-checkout-session) response. This token is used for API only integration specifically.
    */
    'amazonPayToken'?: string;
    /**
    * The `checkoutSessionId` is used to identify the checkout session at the Amazon Pay side. This field is required only for drop-in and components integration, where it replaces the amazonPayToken.
    */
    'checkoutSessionId'?: string;
    /**
    * ANCV account identification (email or account number)
    */
    'beneficiaryId'?: string;
    /**
    * The stringified and base64 encoded `paymentData` you retrieved from the Apple framework.
    */
    'applePayToken': string;
    /**
    * The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
    */
    'fundingSource'?: PaymentRequestPaymentMethod.FundingSourceEnum;
    /**
    * The name of the card holder.
    */
    'holderName'?: string;
    /**
    * The shopper\'s bank. Specify this with the issuer value that corresponds to this bank.
    */
    'issuer': string;
    /**
    * BLIK code consisting of 6 digits.
    */
    'blikCode'?: string;
    /**
    * Secondary brand of the card. For example: **plastix**, **hmclub**.
    */
    'brand'?: string;
    'cupsecureplus_smscode'?: string;
    /**
    * The card verification code. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'cvc'?: string;
    /**
    * The encrypted card number.
    */
    'encryptedCardNumber'?: string;
    /**
    * The encrypted card expiry month.
    */
    'encryptedExpiryMonth'?: string;
    /**
    * The encrypted card expiry year.
    */
    'encryptedExpiryYear'?: string;
    /**
    * The encrypted card verification code.
    */
    'encryptedSecurityCode'?: string;
    /**
    * The card expiry month. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'expiryMonth'?: string;
    /**
    * The card expiry year. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'expiryYear'?: string;
    /**
    * The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference) from the response to the first payment.
    */
    'networkPaymentReference'?: string;
    /**
    * The card number. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
    */
    'number'?: string;
    /**
    * The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.
    */
    'shopperNotificationReference'?: string;
    /**
    * Required for mobile integrations. Version of the 3D Secure 2 mobile SDK.
    */
    'threeDS2SdkVersion'?: string;
    /**
    * The shopper\'s first name.
    */
    'firstName': string;
    /**
    * The shopper\'s last name.
    */
    'lastName': string;
    /**
    * 
    */
    'shopperEmail': string;
    /**
    * 
    */
    'telephoneNumber': string;
    /**
    * The selected payment card network. 
    */
    'googlePayCardNetwork'?: string;
    /**
    * The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
    */
    'googlePayToken': string;
    /**
    * The type of flow to initiate.
    */
    'subtype'?: PaymentRequestPaymentMethod.SubtypeEnum;
    /**
    * The Masterpass transaction ID.
    */
    'masterpassTransactionId': string;
    /**
    * The unique ID associated with the order.
    */
    'orderID'?: string;
    /**
    * IMMEDIATE_PAYMENT_REQUIRED or UNRESTRICTED
    */
    'payeePreferred'?: string;
    /**
    * The unique ID associated with the payer.
    */
    'payerID'?: string;
    /**
    * PAYPAL or PAYPAL_CREDIT
    */
    'payerSelected'?: string;
    /**
    * The virtual payment address for UPI.
    */
    'virtualPaymentAddress'?: string;
    /**
    * The payload you received from the Samsung Pay SDK response.
    */
    'samsungPayToken': string;
    /**
    * The International Bank Account Number (IBAN).
    */
    'iban': string;
    /**
    * The sequence number for the debit. For example, send **2** if this is the second debit for the subscription. The sequence number is included in the notification sent to the shopper.
    */
    'billingSequenceNumber': string;
    /**
    * The Visa Click to Pay Call ID value. When your shopper selects a payment and/or a shipping address from Visa Click to Pay, you will receive a Visa Click to Pay Call ID.
    */
    'visaCheckoutCallId': string;
    'appId'?: string;
    'openid'?: string;
    /**
    * Set this to **true** if the shopper would like to pick up and collect their order, instead of having the goods delivered to them.
    */
    'clickAndCollect'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bankAccountNumber",
            "baseName": "bankAccountNumber",
            "type": "string"
        },
        {
            "name": "bankAccountType",
            "baseName": "bankAccountType",
            "type": "PaymentRequestPaymentMethod.BankAccountTypeEnum"
        },
        {
            "name": "bankLocationId",
            "baseName": "bankLocationId",
            "type": "string"
        },
        {
            "name": "checkoutAttemptId",
            "baseName": "checkoutAttemptId",
            "type": "string"
        },
        {
            "name": "encryptedBankAccountNumber",
            "baseName": "encryptedBankAccountNumber",
            "type": "string"
        },
        {
            "name": "encryptedBankLocationId",
            "baseName": "encryptedBankLocationId",
            "type": "string"
        },
        {
            "name": "ownerName",
            "baseName": "ownerName",
            "type": "string"
        },
        {
            "name": "recurringDetailReference",
            "baseName": "recurringDetailReference",
            "type": "string"
        },
        {
            "name": "storedPaymentMethodId",
            "baseName": "storedPaymentMethodId",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentRequestPaymentMethod.TypeEnum"
        },
        {
            "name": "billingAddress",
            "baseName": "billingAddress",
            "type": "string"
        },
        {
            "name": "deliveryAddress",
            "baseName": "deliveryAddress",
            "type": "string"
        },
        {
            "name": "personalDetails",
            "baseName": "personalDetails",
            "type": "string"
        },
        {
            "name": "amazonPayToken",
            "baseName": "amazonPayToken",
            "type": "string"
        },
        {
            "name": "checkoutSessionId",
            "baseName": "checkoutSessionId",
            "type": "string"
        },
        {
            "name": "beneficiaryId",
            "baseName": "beneficiaryId",
            "type": "string"
        },
        {
            "name": "applePayToken",
            "baseName": "applePayToken",
            "type": "string"
        },
        {
            "name": "fundingSource",
            "baseName": "fundingSource",
            "type": "PaymentRequestPaymentMethod.FundingSourceEnum"
        },
        {
            "name": "holderName",
            "baseName": "holderName",
            "type": "string"
        },
        {
            "name": "issuer",
            "baseName": "issuer",
            "type": "string"
        },
        {
            "name": "blikCode",
            "baseName": "blikCode",
            "type": "string"
        },
        {
            "name": "brand",
            "baseName": "brand",
            "type": "string"
        },
        {
            "name": "cupsecureplus_smscode",
            "baseName": "cupsecureplus.smscode",
            "type": "string"
        },
        {
            "name": "cvc",
            "baseName": "cvc",
            "type": "string"
        },
        {
            "name": "encryptedCardNumber",
            "baseName": "encryptedCardNumber",
            "type": "string"
        },
        {
            "name": "encryptedExpiryMonth",
            "baseName": "encryptedExpiryMonth",
            "type": "string"
        },
        {
            "name": "encryptedExpiryYear",
            "baseName": "encryptedExpiryYear",
            "type": "string"
        },
        {
            "name": "encryptedSecurityCode",
            "baseName": "encryptedSecurityCode",
            "type": "string"
        },
        {
            "name": "expiryMonth",
            "baseName": "expiryMonth",
            "type": "string"
        },
        {
            "name": "expiryYear",
            "baseName": "expiryYear",
            "type": "string"
        },
        {
            "name": "networkPaymentReference",
            "baseName": "networkPaymentReference",
            "type": "string"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string"
        },
        {
            "name": "shopperNotificationReference",
            "baseName": "shopperNotificationReference",
            "type": "string"
        },
        {
            "name": "threeDS2SdkVersion",
            "baseName": "threeDS2SdkVersion",
            "type": "string"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string"
        },
        {
            "name": "shopperEmail",
            "baseName": "shopperEmail",
            "type": "string"
        },
        {
            "name": "telephoneNumber",
            "baseName": "telephoneNumber",
            "type": "string"
        },
        {
            "name": "googlePayCardNetwork",
            "baseName": "googlePayCardNetwork",
            "type": "string"
        },
        {
            "name": "googlePayToken",
            "baseName": "googlePayToken",
            "type": "string"
        },
        {
            "name": "subtype",
            "baseName": "subtype",
            "type": "PaymentRequestPaymentMethod.SubtypeEnum"
        },
        {
            "name": "masterpassTransactionId",
            "baseName": "masterpassTransactionId",
            "type": "string"
        },
        {
            "name": "orderID",
            "baseName": "orderID",
            "type": "string"
        },
        {
            "name": "payeePreferred",
            "baseName": "payeePreferred",
            "type": "string"
        },
        {
            "name": "payerID",
            "baseName": "payerID",
            "type": "string"
        },
        {
            "name": "payerSelected",
            "baseName": "payerSelected",
            "type": "string"
        },
        {
            "name": "virtualPaymentAddress",
            "baseName": "virtualPaymentAddress",
            "type": "string"
        },
        {
            "name": "samsungPayToken",
            "baseName": "samsungPayToken",
            "type": "string"
        },
        {
            "name": "iban",
            "baseName": "iban",
            "type": "string"
        },
        {
            "name": "billingSequenceNumber",
            "baseName": "billingSequenceNumber",
            "type": "string"
        },
        {
            "name": "visaCheckoutCallId",
            "baseName": "visaCheckoutCallId",
            "type": "string"
        },
        {
            "name": "appId",
            "baseName": "appId",
            "type": "string"
        },
        {
            "name": "openid",
            "baseName": "openid",
            "type": "string"
        },
        {
            "name": "clickAndCollect",
            "baseName": "clickAndCollect",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PaymentRequestPaymentMethod.attributeTypeMap;
    }
}

export namespace PaymentRequestPaymentMethod {
    export enum BankAccountTypeEnum {
        Balance = 'balance',
        Checking = 'checking',
        Deposit = 'deposit',
        General = 'general',
        Other = 'other',
        Payment = 'payment',
        Savings = 'savings'
    }
    export enum TypeEnum {
        Ach = 'ach',
        AchPlaid = 'ach_plaid',
        AfterpayDefault = 'afterpay_default',
        Afterpaytouch = 'afterpaytouch',
        AfterpayB2b = 'afterpay_b2b',
        Clearpay = 'clearpay',
        Amazonpay = 'amazonpay',
        Ancv = 'ancv',
        Androidpay = 'androidpay',
        Applepay = 'applepay',
        DirectdebitGb = 'directdebit_GB',
        BilldeskOnline = 'billdesk_online',
        BilldeskWallet = 'billdesk_wallet',
        Blik = 'blik',
        Bcmc = 'bcmc',
        Scheme = 'scheme',
        NetworkToken = 'networkToken',
        Giftcard = 'giftcard',
        Card = 'card',
        Cellulant = 'cellulant',
        DokuMandiriVa = 'doku_mandiri_va',
        DokuCimbVa = 'doku_cimb_va',
        DokuDanamonVa = 'doku_danamon_va',
        DokuBniVa = 'doku_bni_va',
        DokuPermataLiteAtm = 'doku_permata_lite_atm',
        DokuBriVa = 'doku_bri_va',
        DokuBcaVa = 'doku_bca_va',
        DokuAlfamart = 'doku_alfamart',
        DokuIndomaret = 'doku_indomaret',
        DokuWallet = 'doku_wallet',
        DokuOvo = 'doku_ovo',
        Dotpay = 'dotpay',
        DragonpayEbanking = 'dragonpay_ebanking',
        DragonpayOtcBanking = 'dragonpay_otc_banking',
        DragonpayOtcNonBanking = 'dragonpay_otc_non_banking',
        DragonpayOtcPhilippines = 'dragonpay_otc_philippines',
        EcontextSeveneleven = 'econtext_seveneleven',
        EcontextStores = 'econtext_stores',
        OnlineBankingPl = 'onlineBanking_PL',
        Eps = 'eps',
        OnlineBankingSk = 'onlineBanking_SK',
        OnlineBankingCz = 'onlineBanking_CZ',
        Giropay = 'giropay',
        Googlepay = 'googlepay',
        Ideal = 'ideal',
        Klarna = 'klarna',
        Klarnapayments = 'klarnapayments',
        KlarnapaymentsAccount = 'klarnapayments_account',
        KlarnapaymentsB2b = 'klarnapayments_b2b',
        KlarnaPaynow = 'klarna_paynow',
        KlarnaAccount = 'klarna_account',
        KlarnaB2b = 'klarna_b2b',
        Masterpass = 'masterpass',
        Mbway = 'mbway',
        Mobilepay = 'mobilepay',
        MolpayEbankingFpxMy = 'molpay_ebanking_fpx_MY',
        MolpayEbankingTh = 'molpay_ebanking_TH',
        Openinvoice = 'openinvoice',
        AfterpayDirectdebit = 'afterpay_directdebit',
        AtomePos = 'atome_pos',
        Paypal = 'paypal',
        PayuInUpi = 'payu_IN_upi',
        Paywithgoogle = 'paywithgoogle',
        Alipay = 'alipay',
        Multibanco = 'multibanco',
        BankTransferIban = 'bankTransfer_IBAN',
        Paybright = 'paybright',
        Paynow = 'paynow',
        Affirm = 'affirm',
        AffirmPos = 'affirm_pos',
        Trustly = 'trustly',
        Trustlyvector = 'trustlyvector',
        Oney = 'oney',
        Facilypay = 'facilypay',
        Facilypay3x = 'facilypay_3x',
        Facilypay4x = 'facilypay_4x',
        Facilypay6x = 'facilypay_6x',
        Facilypay10x = 'facilypay_10x',
        Facilypay12x = 'facilypay_12x',
        Unionpay = 'unionpay',
        KcpBanktransfer = 'kcp_banktransfer',
        KcpPayco = 'kcp_payco',
        KcpCreditcard = 'kcp_creditcard',
        WechatpaySdk = 'wechatpaySDK',
        WechatpayQr = 'wechatpayQR',
        WechatpayWeb = 'wechatpayWeb',
        MolpayBoost = 'molpay_boost',
        WalletIn = 'wallet_IN',
        PayuInCashcard = 'payu_IN_cashcard',
        PayuInNb = 'payu_IN_nb',
        UpiQr = 'upi_qr',
        Paytm = 'paytm',
        MolpayEbankingVn = 'molpay_ebanking_VN',
        Paybybank = 'paybybank',
        EbankingFi = 'ebanking_FI',
        MolpayEbankingMy = 'molpay_ebanking_MY',
        MolpayEbankingDirectMy = 'molpay_ebanking_direct_MY',
        Swish = 'swish',
        Pix = 'pix',
        Walley = 'walley',
        WalleyB2b = 'walley_b2b',
        Alma = 'alma',
        Paypo = 'paypo',
        MolpayFpx = 'molpay_fpx',
        Konbini = 'konbini',
        DirectEbanking = 'directEbanking',
        Boletobancario = 'boletobancario',
        Neteller = 'neteller',
        Paysafecard = 'paysafecard',
        Cashticket = 'cashticket',
        Ikano = 'ikano',
        Karenmillen = 'karenmillen',
        Oasis = 'oasis',
        Warehouse = 'warehouse',
        PrimeiropayBoleto = 'primeiropay_boleto',
        Mada = 'mada',
        Benefit = 'benefit',
        Knet = 'knet',
        Omannet = 'omannet',
        GopayWallet = 'gopay_wallet',
        KcpNaverpay = 'kcp_naverpay',
        OnlinebankingIn = 'onlinebanking_IN',
        Fawry = 'fawry',
        Atome = 'atome',
        Moneybookers = 'moneybookers',
        Naps = 'naps',
        Nordea = 'nordea',
        BoletobancarioBradesco = 'boletobancario_bradesco',
        BoletobancarioItau = 'boletobancario_itau',
        BoletobancarioSantander = 'boletobancario_santander',
        BoletobancarioBancodobrasil = 'boletobancario_bancodobrasil',
        BoletobancarioHsbc = 'boletobancario_hsbc',
        MolpayMaybank2u = 'molpay_maybank2u',
        MolpayCimb = 'molpay_cimb',
        MolpayRhb = 'molpay_rhb',
        MolpayAmb = 'molpay_amb',
        MolpayHlb = 'molpay_hlb',
        MolpayAffinEpg = 'molpay_affin_epg',
        MolpayBankislam = 'molpay_bankislam',
        MolpayPublicbank = 'molpay_publicbank',
        FpxAgrobank = 'fpx_agrobank',
        Touchngo = 'touchngo',
        Maybank2uMae = 'maybank2u_mae',
        Duitnow = 'duitnow',
        Promptpay = 'promptpay',
        TwintPos = 'twint_pos',
        AlipayHk = 'alipay_hk',
        AlipayHkWeb = 'alipay_hk_web',
        AlipayHkWap = 'alipay_hk_wap',
        AlipayWap = 'alipay_wap',
        Balanceplatform = 'balanceplatform',
        Ratepay = 'ratepay',
        RatepayDirectdebit = 'ratepay_directdebit',
        Samsungpay = 'samsungpay',
        Sepadirectdebit = 'sepadirectdebit',
        SepadirectdebitAmazonpay = 'sepadirectdebit_amazonpay',
        BcmcMobile = 'bcmc_mobile',
        BcmcMobileQr = 'bcmc_mobile_QR',
        BcmcMobileApp = 'bcmc_mobile_app',
        MomoWallet = 'momo_wallet',
        MomoWalletApp = 'momo_wallet_app',
        Twint = 'twint',
        PaymayaWallet = 'paymaya_wallet',
        GrabpaySg = 'grabpay_SG',
        GrabpayMy = 'grabpay_MY',
        GrabpayTh = 'grabpay_TH',
        GrabpayId = 'grabpay_ID',
        GrabpayVn = 'grabpay_VN',
        GrabpayPh = 'grabpay_PH',
        Oxxo = 'oxxo',
        Gcash = 'gcash',
        Dana = 'dana',
        Kakaopay = 'kakaopay',
        Truemoney = 'truemoney',
        UpiCollect = 'upi_collect',
        UpiIntent = 'upi_intent',
        Vipps = 'vipps',
        Visacheckout = 'visacheckout',
        Wechatpay = 'wechatpay',
        WechatpayPos = 'wechatpay_pos',
        WechatpayMiniProgram = 'wechatpayMiniProgram',
        Zip = 'zip',
        ZipPos = 'zip_pos'
    }
    export enum FundingSourceEnum {
        Credit = 'credit',
        Debit = 'debit'
    }
    export enum SubtypeEnum {
        Redirect = 'redirect',
        Sdk = 'sdk'
    }
}
