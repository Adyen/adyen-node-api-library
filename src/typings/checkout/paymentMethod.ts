/*
 * The version of the OpenAPI document: v71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { InputDetail } from "./inputDetail";
import { PaymentMethodGroup } from "./paymentMethodGroup";
import { PaymentMethodIssuer } from "./paymentMethodIssuer";
import { PaymentMethodUPIApps } from "./paymentMethodUPIApps";


export class PaymentMethod {
    /**
    * A list of apps for this payment method.
    */
    'apps'?: Array<PaymentMethodUPIApps>;
    /**
    * Brand for the selected gift card. For example: plastix, hmclub.
    */
    'brand'?: string;
    /**
    * List of possible brands. For example: visa, mc.
    */
    'brands'?: Array<string>;
    /**
    * The configuration of the payment method.
    */
    'configuration'?: { [key: string]: string; };
    /**
    * The funding source of the payment method.
    */
    'fundingSource'?: PaymentMethod.FundingSourceEnum;
    'group'?: PaymentMethodGroup;
    /**
    * All input details to be provided to complete the payment with this payment method.
    *
	* @deprecated 
    */
    'inputDetails'?: Array<InputDetail>;
    /**
    * A list of issuers for this payment method.
    */
    'issuers'?: Array<PaymentMethodIssuer>;
    /**
    * The displayable name of this payment method.
    */
    'name'?: string;
    /**
    * The unique payment method code.
    */
    'type'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "apps",
            "baseName": "apps",
            "type": "Array<PaymentMethodUPIApps>",
            "format": ""
        },
        {
            "name": "brand",
            "baseName": "brand",
            "type": "string",
            "format": ""
        },
        {
            "name": "brands",
            "baseName": "brands",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "configuration",
            "baseName": "configuration",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "fundingSource",
            "baseName": "fundingSource",
            "type": "PaymentMethod.FundingSourceEnum",
            "format": ""
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "PaymentMethodGroup",
            "format": ""
        },
        {
            "name": "inputDetails",
            "baseName": "inputDetails",
            "type": "Array<InputDetail>",
            "format": ""
        },
        {
            "name": "issuers",
            "baseName": "issuers",
            "type": "Array<PaymentMethodIssuer>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethod.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace PaymentMethod {
    export enum FundingSourceEnum {
        Credit = 'credit',
        Debit = 'debit'
    }
}
