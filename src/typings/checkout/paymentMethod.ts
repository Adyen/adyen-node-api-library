/**
 * Adyen Checkout Service
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including One-Click and 3D Secure), mobile wallets, and local payment methods (e.g. iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v49/payments ```
 *
 * OpenAPI spec version: 49
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */import { InputDetail } from './inputDetail';
import { PaymentMethodGroup } from './paymentMethodGroup';


export interface PaymentMethod {
    /**
     * List of possible brands. For example: visa, mc.
     */
    brands?: Array<string>;
    /**
     * The configuration of the payment method.
     */
    configuration?: any;
    /**
     * All input details to be provided to complete the payment with this payment method.
     */
    details?: Array<InputDetail>;
    group?: PaymentMethodGroup;
    /**
     * All input details to be provided to complete the payment with this payment method.
     */
    inputDetails?: Array<InputDetail>;
    /**
     * The displayable name of this payment method.
     */
    name?: string;
    /**
     * Echo data required to send in next calls.
     */
    paymentMethodData?: string;
    /**
     * Indicates whether this payment method supports tokenization or not.
     */
    supportsRecurring?: boolean;
    /**
     * The unique payment method code.
     */
    type?: string;
}