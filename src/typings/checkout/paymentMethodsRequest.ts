/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including One-Click and 3D Secure), mobile wallets, and local payment methods (e.g. iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v51/payments ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Amount } from './amount';
import { AnyOfAdditionalDataCommonAdditionalData3DSecureAdditionalDataAirlineAdditionalDataCarRentalAdditionalDataLevel23AdditionalDataLodgingAdditionalDataOpenInvoiceAdditionalDataRatepayAdditionalDataRetryAdditionalDataRiskAdditionalDataRiskStandaloneAdditionalDataTemporaryServices } from './anyOfAdditionalDataCommonAdditionalData3DSecureAdditionalDataAirlineAdditionalDataCarRentalAdditionalDataLevel23AdditionalDataLodgingAdditionalDataOpenInvoiceAdditionalDataRatepayAdditionalDataRetryAdditionalDataRiskAdditionalDataRiskStandaloneAdditionalDataTemporaryServices';

export class PaymentMethodsRequest {
    /**
    * This field contains additional data, which may be required for a particular payment request.  The `additionalData` object consists of entries, each of which includes the key and value.
    */
    'additionalData'?: AnyOfAdditionalDataCommonAdditionalData3DSecureAdditionalDataAirlineAdditionalDataCarRentalAdditionalDataLevel23AdditionalDataLodgingAdditionalDataOpenInvoiceAdditionalDataRatepayAdditionalDataRetryAdditionalDataRiskAdditionalDataRiskStandaloneAdditionalDataTemporaryServices;
    /**
    * List of payments methods to be presented to the shopper. To refer to payment methods, use their `brandCode` from [Payment methods overview](https://docs.adyen.com/payment-methods).
    */
    'allowedPaymentMethods'?: Array<string>;
    'amount'?: Amount;
    /**
    * List of payments methods to be hidden from the shopper. To refer to payment methods, use their `brandCode` from [Payment methods overview](https://docs.adyen.com/payment-methods).
    */
    'blockedPaymentMethods'?: Array<string>;
    /**
    * The platform where a payment transaction takes place. This field can be used for filtering out payment methods that are only available on specific platforms. Possible values: * iOS * Android * Web
    */
    'channel'?: PaymentMethodsRequest.ChannelEnum;
    /**
    * The shopper\'s country code.
    */
    'countryCode'?: string;
    /**
    * Choose if a specific transaction should use the Real-time Account Updater, regardless of other settings.
    */
    'enableRealTimeUpdate'?: boolean;
    /**
    * The merchant account identifier, with which you want to process the transaction.
    */
    'merchantAccount': string;
    /**
    * The combination of a language code and a country code to specify the language to be used in the payment.
    */
    'shopperLocale'?: string;
    /**
    * The shopper\'s reference to uniquely identify this shopper (e.g. user ID or account ID). > This field is required for recurring payments.
    */
    'shopperReference'?: string;
    /**
    * If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/checkout/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.
    */
    'threeDSAuthenticationOnly'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "additionalData",
            "baseName": "additionalData",
            "type": "AnyOfAdditionalDataCommonAdditionalData3DSecureAdditionalDataAirlineAdditionalDataCarRentalAdditionalDataLevel23AdditionalDataLodgingAdditionalDataOpenInvoiceAdditionalDataRatepayAdditionalDataRetryAdditionalDataRiskAdditionalDataRiskStandaloneAdditionalDataTemporaryServices"
        },
        {
            "name": "allowedPaymentMethods",
            "baseName": "allowedPaymentMethods",
            "type": "Array<string>"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "Amount"
        },
        {
            "name": "blockedPaymentMethods",
            "baseName": "blockedPaymentMethods",
            "type": "Array<string>"
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "PaymentMethodsRequest.ChannelEnum"
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string"
        },
        {
            "name": "enableRealTimeUpdate",
            "baseName": "enableRealTimeUpdate",
            "type": "boolean"
        },
        {
            "name": "merchantAccount",
            "baseName": "merchantAccount",
            "type": "string"
        },
        {
            "name": "shopperLocale",
            "baseName": "shopperLocale",
            "type": "string"
        },
        {
            "name": "shopperReference",
            "baseName": "shopperReference",
            "type": "string"
        },
        {
            "name": "threeDSAuthenticationOnly",
            "baseName": "threeDSAuthenticationOnly",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethodsRequest.attributeTypeMap;
    }
}

export namespace PaymentMethodsRequest {
    export enum ChannelEnum {
        IOS = <any> 'iOS',
        Android = <any> 'Android',
        Web = <any> 'Web'
    }
}
