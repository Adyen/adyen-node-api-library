/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Device } from './device';
import { InfoQualify } from './infoQualify';
import { InputCommand } from './inputCommand';

export class InputData {
    'Device': Device;
    'InfoQualify': InfoQualify;
    'InputCommand': InputCommand;
    'NotifyCardInputFlag'?: boolean;
    'MaxInputTime'?: number;
    'ImmediateResponseFlag'?: boolean;
    'MinLength'?: number;
    'MaxLength'?: number;
    'MaxDecimalLength'?: number;
    'WaitUserValidationFlag'?: boolean;
    'DefaultInputString'?: string;
    'DefaultLayoutString'?: string;
    'StringMask'?: string;
    'FromRightToLeftFlag'?: boolean;
    'MaskCharactersFlag'?: boolean;
    'BeepKeyFlag'?: boolean;
    'GlobalCorrectionFlag'?: boolean;
    'DisableCancelFlag'?: boolean;
    'DisableCorrectFlag'?: boolean;
    'DisableValidFlag'?: boolean;
    'MenuBackFlag'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "Device",
            "baseName": "Device",
            "type": "Device"
        },
        {
            "name": "InfoQualify",
            "baseName": "InfoQualify",
            "type": "InfoQualify"
        },
        {
            "name": "InputCommand",
            "baseName": "InputCommand",
            "type": "InputCommand"
        },
        {
            "name": "NotifyCardInputFlag",
            "baseName": "NotifyCardInputFlag",
            "type": "boolean"
        },
        {
            "name": "MaxInputTime",
            "baseName": "MaxInputTime",
            "type": "number"
        },
        {
            "name": "ImmediateResponseFlag",
            "baseName": "ImmediateResponseFlag",
            "type": "boolean"
        },
        {
            "name": "MinLength",
            "baseName": "MinLength",
            "type": "number"
        },
        {
            "name": "MaxLength",
            "baseName": "MaxLength",
            "type": "number"
        },
        {
            "name": "MaxDecimalLength",
            "baseName": "MaxDecimalLength",
            "type": "number"
        },
        {
            "name": "WaitUserValidationFlag",
            "baseName": "WaitUserValidationFlag",
            "type": "boolean"
        },
        {
            "name": "DefaultInputString",
            "baseName": "DefaultInputString",
            "type": "string"
        },
        {
            "name": "DefaultLayoutString",
            "baseName": "DefaultLayoutString",
            "type": "string"
        },
        {
            "name": "StringMask",
            "baseName": "StringMask",
            "type": "string"
        },
        {
            "name": "FromRightToLeftFlag",
            "baseName": "FromRightToLeftFlag",
            "type": "boolean"
        },
        {
            "name": "MaskCharactersFlag",
            "baseName": "MaskCharactersFlag",
            "type": "boolean"
        },
        {
            "name": "BeepKeyFlag",
            "baseName": "BeepKeyFlag",
            "type": "boolean"
        },
        {
            "name": "GlobalCorrectionFlag",
            "baseName": "GlobalCorrectionFlag",
            "type": "boolean"
        },
        {
            "name": "DisableCancelFlag",
            "baseName": "DisableCancelFlag",
            "type": "boolean"
        },
        {
            "name": "DisableCorrectFlag",
            "baseName": "DisableCorrectFlag",
            "type": "boolean"
        },
        {
            "name": "DisableValidFlag",
            "baseName": "DisableValidFlag",
            "type": "boolean"
        },
        {
            "name": "MenuBackFlag",
            "baseName": "MenuBackFlag",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return InputData.attributeTypeMap;
    }
}

