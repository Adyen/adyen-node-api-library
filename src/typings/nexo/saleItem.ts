/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { UnitOfMeasure } from './unitOfMeasure';

/**
* In loyalty or value added payment card transaction, the items of the sale are entering in the processing of the transaction. Sale items of a transaction.
*/
export class SaleItem {
    /**
    * Item identification inside a transaction (0 to n).
    */
    'ItemID': number;
    /**
    * Product code of item purchased with the transaction.
    */
    'ProductCode': number;
    /**
    * If data sent, POI has to store it and send it if the host protocol allows it.
    */
    'EanUpc'?: number;
    'UnitOfMeasure'?: UnitOfMeasure;
    /**
    * If data sent, POI has to store it and send it if the host protocol allows it.
    */
    'Quantity'?: string;
    /**
    * if Quantity present.
    */
    'UnitPrice'?: number;
    /**
    * Total amount of the item line.
    */
    'ItemAmount': number;
    /**
    * If data sent, POI has to store it and send it if the host protocol allows it.
    */
    'TaxCode'?: number;
    /**
    * If data sent, POI has to store it and send it if the host protocol allows it.
    */
    'SaleChannel'?: number;
    'ProductLabel'?: string;
    /**
    * If data sent, POI has to store it and send it if the host protocol allows it.
    */
    'AdditionalProductInfo'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ItemID",
            "baseName": "ItemID",
            "type": "number"
        },
        {
            "name": "ProductCode",
            "baseName": "ProductCode",
            "type": "number"
        },
        {
            "name": "EanUpc",
            "baseName": "EanUpc",
            "type": "number"
        },
        {
            "name": "UnitOfMeasure",
            "baseName": "UnitOfMeasure",
            "type": "UnitOfMeasure"
        },
        {
            "name": "Quantity",
            "baseName": "Quantity",
            "type": "string"
        },
        {
            "name": "UnitPrice",
            "baseName": "UnitPrice",
            "type": "number"
        },
        {
            "name": "ItemAmount",
            "baseName": "ItemAmount",
            "type": "number"
        },
        {
            "name": "TaxCode",
            "baseName": "TaxCode",
            "type": "number"
        },
        {
            "name": "SaleChannel",
            "baseName": "SaleChannel",
            "type": "number"
        },
        {
            "name": "ProductLabel",
            "baseName": "ProductLabel",
            "type": "string"
        },
        {
            "name": "AdditionalProductInfo",
            "baseName": "AdditionalProductInfo",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return SaleItem.attributeTypeMap;
    }
}

