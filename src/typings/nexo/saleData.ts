/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { SaleTerminalData } from './saleTerminalData';
import { SaleToIssuerData } from './saleToIssuerData';
import { TokenRequestedType } from './tokenRequestedType';
import { TransactionIDType } from './transactionIDType';

/**
* Data associated to the Sale System, with a particular value during the processing of the payment by the POI, including the cards acquisition. Data related to the Sale System.
*/
export class SaleData {
    'OperatorID'?: string;
    /**
    * if different from the Login.
    */
    'OperatorLanguage'?: string;
    /**
    * if different from the Login and  see Login .SaleData.
    */
    'ShiftNumber'?: string;
    'SaleTransactionID': TransactionIDType;
    /**
    * If payment reservation.
    */
    'SaleReferenceID'?: string;
    'SaleTerminalData'?: SaleTerminalData;
    'TokenRequestedType'?: TokenRequestedType;
    /**
    * Additional and optional identification of a customer order.
    */
    'CustomerOrderID'?: string;
    'CustomerOrderReq'?: Array<SaleData.CustomerOrderReqEnum>;
    /**
    * Stored with the transaction.
    */
    'SaleToPOIData'?: string;
    /**
    * Send to the Acquirer if present.
    */
    'SaleToAcquirerData'?: string;
    'SaleToIssuerData'?: SaleToIssuerData;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "OperatorID",
            "baseName": "OperatorID",
            "type": "string"
        },
        {
            "name": "OperatorLanguage",
            "baseName": "OperatorLanguage",
            "type": "string"
        },
        {
            "name": "ShiftNumber",
            "baseName": "ShiftNumber",
            "type": "string"
        },
        {
            "name": "SaleTransactionID",
            "baseName": "SaleTransactionID",
            "type": "TransactionIDType"
        },
        {
            "name": "SaleReferenceID",
            "baseName": "SaleReferenceID",
            "type": "string"
        },
        {
            "name": "SaleTerminalData",
            "baseName": "SaleTerminalData",
            "type": "SaleTerminalData"
        },
        {
            "name": "TokenRequestedType",
            "baseName": "TokenRequestedType",
            "type": "TokenRequestedType"
        },
        {
            "name": "CustomerOrderID",
            "baseName": "CustomerOrderID",
            "type": "string"
        },
        {
            "name": "CustomerOrderReq",
            "baseName": "CustomerOrderReq",
            "type": "Array<SaleData.CustomerOrderReqEnum>"
        },
        {
            "name": "SaleToPOIData",
            "baseName": "SaleToPOIData",
            "type": "string"
        },
        {
            "name": "SaleToAcquirerData",
            "baseName": "SaleToAcquirerData",
            "type": "string"
        },
        {
            "name": "SaleToIssuerData",
            "baseName": "SaleToIssuerData",
            "type": "SaleToIssuerData"
        }    ];

    static getAttributeTypeMap() {
        return SaleData.attributeTypeMap;
    }
}

export namespace SaleData {
    export enum CustomerOrderReqEnum {
        Both = 'Both',
        Closed = 'Closed',
        Open = 'Open'
    }
}
