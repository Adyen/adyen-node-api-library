/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { AllowedProduct } from './allowedProduct';
import { CustomerOrder } from './customerOrder';
import { PaymentToken } from './paymentToken';
import { SensitiveCardData } from './sensitiveCardData';

/**
* Allows acquisition of the card data by the Sale System before the Payment, CardAcquisition  or BalanceInquiry request to the POI. It could also be sent in the CardAcquisition response, to be processed by the Sale System. Information related to the payment card used for the transaction.
*/
export class CardData {
    /**
    * If card PAN is readable .
    */
    'PaymentBrand'?: string;
    'MaskedPan'?: string;
    'PaymentAccountRef'?: string;
    'EntryMode'?: Array<CardData.EntryModeEnum>;
    /**
    * If available in the card.
    */
    'CardCountryCode'?: number;
    /**
    * SensitiveCardData protected by CMS EnvelopedData.
    */
    'ProtectedCardData'?: string;
    'SensitiveCardData'?: SensitiveCardData;
    'AllowedProductCode'?: Array<number>;
    'AllowedProduct'?: Array<AllowedProduct>;
    'PaymentToken'?: PaymentToken;
    'CustomerOrder'?: Array<CustomerOrder>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "PaymentBrand",
            "baseName": "PaymentBrand",
            "type": "string"
        },
        {
            "name": "MaskedPan",
            "baseName": "MaskedPan",
            "type": "string"
        },
        {
            "name": "PaymentAccountRef",
            "baseName": "PaymentAccountRef",
            "type": "string"
        },
        {
            "name": "EntryMode",
            "baseName": "EntryMode",
            "type": "Array<CardData.EntryModeEnum>"
        },
        {
            "name": "CardCountryCode",
            "baseName": "CardCountryCode",
            "type": "number"
        },
        {
            "name": "ProtectedCardData",
            "baseName": "ProtectedCardData",
            "type": "string"
        },
        {
            "name": "SensitiveCardData",
            "baseName": "SensitiveCardData",
            "type": "SensitiveCardData"
        },
        {
            "name": "AllowedProductCode",
            "baseName": "AllowedProductCode",
            "type": "Array<number>"
        },
        {
            "name": "AllowedProduct",
            "baseName": "AllowedProduct",
            "type": "Array<AllowedProduct>"
        },
        {
            "name": "PaymentToken",
            "baseName": "PaymentToken",
            "type": "PaymentToken"
        },
        {
            "name": "CustomerOrder",
            "baseName": "CustomerOrder",
            "type": "Array<CustomerOrder>"
        }    ];

    static getAttributeTypeMap() {
        return CardData.attributeTypeMap;
    }
}

export namespace CardData {
    export enum EntryModeEnum {
        Contactless = 'Contactless',
        File = 'File',
        Icc = 'ICC',
        Keyed = 'Keyed',
        MagStripe = 'MagStripe',
        Manual = 'Manual',
        Mobile = 'Mobile',
        Rfid = 'RFID',
        Scanned = 'Scanned',
        SynchronousIcc = 'SynchronousICC',
        Tapped = 'Tapped'
    }
}
