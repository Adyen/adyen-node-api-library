/*
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { managementWebhooks } from "..";

/**
 * Union type for all supported webhook requests.
 * Allows generic handling of configuration-related webhook events.
 */
export type GenericWebhook = 
    | managementWebhooks.MerchantCreatedNotificationRequest
    | managementWebhooks.MerchantUpdatedNotificationRequest
    | managementWebhooks.PaymentMethodCreatedNotificationRequest
    | managementWebhooks.PaymentMethodRequestRemovedNotificationRequest
    | managementWebhooks.PaymentMethodScheduledForRemovalNotificationRequest
    | managementWebhooks.TerminalBoardingNotificationRequest
    | managementWebhooks.TerminalSettingsNotificationRequest;

/**
 * Handler for processing ManagementWebhooks.
 * 
 * This class provides functionality to deserialize the payload of ManagementWebhooks events.
 */
export class ManagementWebhooksHandler {

    private readonly payload: Record<string, any>;

    public constructor(jsonPayload: string) {
        this.payload = JSON.parse(jsonPayload);
    }

    /**
     * This method checks the type of the webhook payload and returns the appropriate deserialized object.
     * 
     * @returns A deserialized object of type GenericWebhook.
     * @throws Error if the type is not recognized.
     */
    public getGenericWebhook(): GenericWebhook {
    
        const type = this.payload["type"];
        
        if(Object.values(managementWebhooks.MerchantCreatedNotificationRequest.TypeEnum).includes(type)) {
            return this.getMerchantCreatedNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.MerchantUpdatedNotificationRequest.TypeEnum).includes(type)) {
            return this.getMerchantUpdatedNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.PaymentMethodCreatedNotificationRequest.TypeEnum).includes(type)) {
            return this.getPaymentMethodCreatedNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.PaymentMethodRequestRemovedNotificationRequest.TypeEnum).includes(type)) {
            return this.getPaymentMethodRequestRemovedNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.PaymentMethodScheduledForRemovalNotificationRequest.TypeEnum).includes(type)) {
            return this.getPaymentMethodScheduledForRemovalNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.TerminalBoardingNotificationRequest.TypeEnum).includes(type)) {
            return this.getTerminalBoardingNotificationRequest();
        }
        
        if(Object.values(managementWebhooks.TerminalSettingsNotificationRequest.TypeEnum).includes(type)) {
            return this.getTerminalSettingsNotificationRequest();
        }
        
        throw new Error("Could not parse the json payload: " + this.payload);

    }

    /**
     * Deserialize the webhook payload into a MerchantCreatedNotificationRequest
     *
     * @returns Deserialized MerchantCreatedNotificationRequest object.
     */
    public getMerchantCreatedNotificationRequest(): managementWebhooks.MerchantCreatedNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "MerchantCreatedNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a MerchantUpdatedNotificationRequest
     *
     * @returns Deserialized MerchantUpdatedNotificationRequest object.
     */
    public getMerchantUpdatedNotificationRequest(): managementWebhooks.MerchantUpdatedNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "MerchantUpdatedNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a PaymentMethodCreatedNotificationRequest
     *
     * @returns Deserialized PaymentMethodCreatedNotificationRequest object.
     */
    public getPaymentMethodCreatedNotificationRequest(): managementWebhooks.PaymentMethodCreatedNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "PaymentMethodCreatedNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a PaymentMethodRequestRemovedNotificationRequest
     *
     * @returns Deserialized PaymentMethodRequestRemovedNotificationRequest object.
     */
    public getPaymentMethodRequestRemovedNotificationRequest(): managementWebhooks.PaymentMethodRequestRemovedNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "PaymentMethodRequestRemovedNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a PaymentMethodScheduledForRemovalNotificationRequest
     *
     * @returns Deserialized PaymentMethodScheduledForRemovalNotificationRequest object.
     */
    public getPaymentMethodScheduledForRemovalNotificationRequest(): managementWebhooks.PaymentMethodScheduledForRemovalNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "PaymentMethodScheduledForRemovalNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a TerminalBoardingNotificationRequest
     *
     * @returns Deserialized TerminalBoardingNotificationRequest object.
     */
    public getTerminalBoardingNotificationRequest(): managementWebhooks.TerminalBoardingNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "TerminalBoardingNotificationRequest");
    }

    /**
     * Deserialize the webhook payload into a TerminalSettingsNotificationRequest
     *
     * @returns Deserialized TerminalSettingsNotificationRequest object.
     */
    public getTerminalSettingsNotificationRequest(): managementWebhooks.TerminalSettingsNotificationRequest {
        return managementWebhooks.ObjectSerializer.deserialize(this.payload, "TerminalSettingsNotificationRequest");
    }

}