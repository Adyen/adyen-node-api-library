/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class MidServiceNotificationData {
    /**
    * Indicates whether receiving payments is allowed. This value is set to **true** by Adyen after screening your merchant account.
    */
    'allowed'?: boolean;
    /**
    * Indicates whether the payment method is enabled (**true**) or disabled (**false**).
    */
    'enabled'?: boolean;
    /**
    * The identifier of the resource.
    */
    'id': string;
    /**
    * The identifier of the merchant account.
    */
    'merchantId': string;
    /**
    * Your reference for the payment method.
    */
    'reference'?: string;
    /**
    * The result of the request to create a payment method.
    */
    'result': MidServiceNotificationData.ResultEnum;
    /**
    * The identifier of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/merchants/{id}/paymentMethodSettings__reqParam_storeId), if any.
    */
    'storeId'?: string;
    /**
    * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
    */
    'type': string;
    /**
    * Payment method status. Possible values: * **valid** * **pending** * **invalid** * **rejected**
    */
    'verificationStatus'?: MidServiceNotificationData.VerificationStatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "allowed",
            "baseName": "allowed",
            "type": "boolean"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "merchantId",
            "baseName": "merchantId",
            "type": "string"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "MidServiceNotificationData.ResultEnum"
        },
        {
            "name": "storeId",
            "baseName": "storeId",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "verificationStatus",
            "baseName": "verificationStatus",
            "type": "MidServiceNotificationData.VerificationStatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return MidServiceNotificationData.attributeTypeMap;
    }
}

export namespace MidServiceNotificationData {
    export enum ResultEnum {
        Success = 'SUCCESS',
        Failure = 'FAILURE'
    }
    export enum VerificationStatusEnum {
        Valid = 'valid',
        Pending = 'pending',
        Invalid = 'invalid',
        Rejected = 'rejected'
    }
}
