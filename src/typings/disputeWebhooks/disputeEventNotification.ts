/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Amount } from "./amount";


export class DisputeEventNotification {
    /**
    * The unique Acquirer Reference Number (arn) generated by the card scheme for each capture. You can use the arn to trace the transaction through its lifecycle.
    */
    "arn"?: string;
    /**
    * The unique identifier of the balance platform.
    */
    "balancePlatform"?: string;
    /**
    * The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.
    */
    "creationDate"?: Date;
    /**
    * Contains information about the dispute.
    */
    "description"?: string;
    "disputedAmount"?: Amount;
    /**
    * The ID of the resource.
    */
    "id"?: string;
    /**
    * The current status of the dispute.
    */
    "status"?: string;
    /**
    * Additional information about the status of the dispute, when available.
    */
    "statusDetail"?: string;
    /**
    * The unique reference of the transaction for which the dispute is requested.
    */
    "transactionId"?: string;
    /**
    * The type of dispute raised for the transaction.
    */
    "type"?: DisputeEventNotification.TypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "arn",
            "baseName": "arn",
            "type": "string",
            "format": ""
        },
        {
            "name": "balancePlatform",
            "baseName": "balancePlatform",
            "type": "string",
            "format": ""
        },
        {
            "name": "creationDate",
            "baseName": "creationDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "disputedAmount",
            "baseName": "disputedAmount",
            "type": "Amount",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "statusDetail",
            "baseName": "statusDetail",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionId",
            "baseName": "transactionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "DisputeEventNotification.TypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DisputeEventNotification.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace DisputeEventNotification {
    export enum TypeEnum {
        Fraud = 'fraud',
        NotDelivered = 'notDelivered',
        Duplicate = 'duplicate'
    }
}
