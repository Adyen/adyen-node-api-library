/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class BankCategoryData {
    /**
    * The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. Required for transfers with `category` **bank**.  Possible values:  * **regular**: for normal, low-value transactions.  * **fast**: a faster way to transfer funds, but the fees are higher. Recommended for high-priority, low-value transactions.  * **wire**: the fastest way to transfer funds, but this has the highest fees. Recommended for high-priority, high-value transactions.  * **instant**: for instant funds transfers in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).  * **crossBorder**: for high-value transfers to a recipient in a different country.  * **internal**: for transfers to an Adyen-issued business bank account (by bank account number/IBAN).
    */
    'priority'?: BankCategoryData.PriorityEnum;
    /**
    * **bank**
    */
    'type'?: BankCategoryData.TypeEnum = BankCategoryData.TypeEnum.Bank;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "priority",
            "baseName": "priority",
            "type": "BankCategoryData.PriorityEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "BankCategoryData.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return BankCategoryData.attributeTypeMap;
    }
}

export namespace BankCategoryData {
    export enum PriorityEnum {
        CrossBorder = <any> 'crossBorder',
        Fast = <any> 'fast',
        Instant = <any> 'instant',
        Internal = <any> 'internal',
        Regular = <any> 'regular',
        Wire = <any> 'wire'
    }
    export enum TypeEnum {
        Bank = <any> 'bank'
    }
}
