/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v51/authorise ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class AdditionalDataTemporaryServices {
    /**
    * Customer code, if supplied by a customer. * Encoding: ASCII * maxLength: 25
    */
    'enhancedSchemeDataCustomerReference'?: string;
    /**
    * Total tax amount, in minor units. For example, 2000 means USD 20.00 * maxLength: 12
    */
    'enhancedSchemeDataTotalTaxAmount'?: string;
    /**
    * Name or ID associated with the individual working in a temporary capacity. * maxLength: 40
    */
    'enhancedSchemeDataEmployeeName'?: string;
    /**
    * Description of the job or task of the individual working in a temporary capacity. * maxLength: 40
    */
    'enhancedSchemeDataJobDescription'?: string;
    /**
    * Date for the beginning of the pay period. * Format: ddMMyy * maxLength: 6
    */
    'enhancedSchemeDataTempStartDate'?: string;
    /**
    * Date of the end of the billing cycle. * Format: ddMMyy * maxLength: 6
    */
    'enhancedSchemeDataTempWeekEnding'?: string;
    /**
    * Name of the individual requesting temporary services. * maxLength: 40
    */
    'enhancedSchemeDataRequestName'?: string;
    /**
    * Amount of time worked during a normal operation for the task or job. * maxLength: 7
    */
    'enhancedSchemeDataRegularHoursWorked'?: string;
    /**
    * Amount paid per regular hours worked, minor units. * maxLength: 7
    */
    'enhancedSchemeDataRegularHoursRate'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "enhancedSchemeDataCustomerReference",
            "baseName": "enhancedSchemeData.customerReference",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataTotalTaxAmount",
            "baseName": "enhancedSchemeData.totalTaxAmount",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataEmployeeName",
            "baseName": "enhancedSchemeData.employeeName",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataJobDescription",
            "baseName": "enhancedSchemeData.jobDescription",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataTempStartDate",
            "baseName": "enhancedSchemeData.tempStartDate",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataTempWeekEnding",
            "baseName": "enhancedSchemeData.tempWeekEnding",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataRequestName",
            "baseName": "enhancedSchemeData.requestName",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataRegularHoursWorked",
            "baseName": "enhancedSchemeData.regularHoursWorked",
            "type": "string"
        },
        {
            "name": "enhancedSchemeDataRegularHoursRate",
            "baseName": "enhancedSchemeData.regularHoursRate",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return AdditionalDataTemporaryServices.attributeTypeMap;
    }
}

