/**
 * Adyen Checkout API
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including One-Click and 3D Secure), mobile wallets, and local payment methods (e.g. iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v51/payments ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class AdditionalDataLodging {
    /**
    * The toll free phone number for the hotel/lodgings. * Format: Alphanumeric * maxLength: 17
    */
    'lodgingCustomerServiceTollFreeNumber'?: string;
    /**
    * The arrival date. * Date format: `yyyyMMdd`
    */
    'lodgingCheckInDate'?: string;
    /**
    * The departure date. * Date format: `yyyyMMdd`
    */
    'lodgingCheckOutDate'?: string;
    /**
    * Card acceptorâ€™s internal invoice or billing ID reference number. * Format: Alphanumeric * maxLength: 25
    */
    'lodgingFolioNumber'?: string;
    /**
    * Identifies specific lodging property location by its local phone number. * Format: Alphanumeric * maxLength: 17
    */
    'lodgingPropertyPhoneNumber'?: string;
    /**
    * The rate of the room. * Format: Numeric * maxLength: 12
    */
    'lodgingRoom1Rate'?: string;
    /**
    * The total amount of tax to be paid. * Format: Numeric * maxLength: 12
    */
    'lodgingRoom1Tax'?: string;
    /**
    * Total number of nights the room will be rented. * Format: Numeric * maxLength: 4
    */
    'lodgingRoom1NumberOfNights'?: string;
    /**
    * Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Values can be: \'Y\' or \'N\'. * Format: Alphabetic * maxLength: 1
    */
    'lodgingFireSafetyActIndicator'?: string;
    /**
    * Indicates what market-specific dataset will be submitted or is being submitted. Value should be \"H\" for Hotel. This should be included in the auth message. * Format: Alphanumeric * maxLength: 1
    */
    'travelEntertainmentAuthDataMarket'?: string;
    /**
    * Number of nights.  This should be included in the auth message. * Format: Numeric * maxLength: 2
    */
    'travelEntertainmentAuthDataDuration'?: string;
    /**
    * The folio cash advances. * Format: Numeric * maxLength: 12
    */
    'lodgingFolioCashAdvances'?: string;
    /**
    * Any charges for food and beverages associated with the booking. * Format: Numeric * maxLength: 12
    */
    'lodgingFoodBeverageCharges'?: string;
    /**
    * Indicates if the customer was a \"no-show\" (neither keeps nor cancels their booking).  Value should be Y or N. * Format: Numeric * maxLength: 1
    */
    'lodgingNoShowIndicator'?: string;
    /**
    * Prepaid expenses for the booking. * Format: Numeric * maxLength: 12
    */
    'lodgingPrepaidExpenses'?: string;
    /**
    * Total tax amount. * Format: Numeric * maxLength: 12
    */
    'lodgingTotalTax'?: string;
    /**
    * Total room tax amount. * Format: Numeric * maxLength: 12
    */
    'lodgingTotalRoomTax'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "lodgingCustomerServiceTollFreeNumber",
            "baseName": "lodging.customerServiceTollFreeNumber",
            "type": "string"
        },
        {
            "name": "lodgingCheckInDate",
            "baseName": "lodging.checkInDate",
            "type": "string"
        },
        {
            "name": "lodgingCheckOutDate",
            "baseName": "lodging.checkOutDate",
            "type": "string"
        },
        {
            "name": "lodgingFolioNumber",
            "baseName": "lodging.folioNumber",
            "type": "string"
        },
        {
            "name": "lodgingPropertyPhoneNumber",
            "baseName": "lodging.propertyPhoneNumber",
            "type": "string"
        },
        {
            "name": "lodgingRoom1Rate",
            "baseName": "lodging.room1.rate",
            "type": "string"
        },
        {
            "name": "lodgingRoom1Tax",
            "baseName": "lodging.room1.tax",
            "type": "string"
        },
        {
            "name": "lodgingRoom1NumberOfNights",
            "baseName": "lodging.room1.numberOfNights",
            "type": "string"
        },
        {
            "name": "lodgingFireSafetyActIndicator",
            "baseName": "lodging.fireSafetyActIndicator",
            "type": "string"
        },
        {
            "name": "travelEntertainmentAuthDataMarket",
            "baseName": "travelEntertainmentAuthData.market",
            "type": "string"
        },
        {
            "name": "travelEntertainmentAuthDataDuration",
            "baseName": "travelEntertainmentAuthData.duration",
            "type": "string"
        },
        {
            "name": "lodgingFolioCashAdvances",
            "baseName": "lodging.folioCashAdvances",
            "type": "string"
        },
        {
            "name": "lodgingFoodBeverageCharges",
            "baseName": "lodging.foodBeverageCharges",
            "type": "string"
        },
        {
            "name": "lodgingNoShowIndicator",
            "baseName": "lodging.noShowIndicator",
            "type": "string"
        },
        {
            "name": "lodgingPrepaidExpenses",
            "baseName": "lodging.prepaidExpenses",
            "type": "string"
        },
        {
            "name": "lodgingTotalTax",
            "baseName": "lodging.totalTax",
            "type": "string"
        },
        {
            "name": "lodgingTotalRoomTax",
            "baseName": "lodging.totalRoomTax",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return AdditionalDataLodging.attributeTypeMap;
    }
}

