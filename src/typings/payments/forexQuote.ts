/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v51/authorise ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Amount } from './amount';

export class ForexQuote {
    /**
    * The account name.
    */
    'account'?: string;
    /**
    * The account type.
    */
    'accountType'?: string;
    'baseAmount'?: Amount;
    /**
    * The base points.
    */
    'basePoints': number;
    'buy'?: Amount;
    'interbank'?: Amount;
    /**
    * The reference assigned to the forex quote request.
    */
    'reference'?: string;
    'sell'?: Amount;
    /**
    * The signature to validate the integrity.
    */
    'signature'?: string;
    /**
    * The source of the forex quote.
    */
    'source'?: string;
    /**
    * The type of forex.
    */
    'type'?: string;
    /**
    * The date until which the forex quote is valid.
    */
    'validTill': Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "account",
            "baseName": "account",
            "type": "string"
        },
        {
            "name": "accountType",
            "baseName": "accountType",
            "type": "string"
        },
        {
            "name": "baseAmount",
            "baseName": "baseAmount",
            "type": "Amount"
        },
        {
            "name": "basePoints",
            "baseName": "basePoints",
            "type": "number"
        },
        {
            "name": "buy",
            "baseName": "buy",
            "type": "Amount"
        },
        {
            "name": "interbank",
            "baseName": "interbank",
            "type": "Amount"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "sell",
            "baseName": "sell",
            "type": "Amount"
        },
        {
            "name": "signature",
            "baseName": "signature",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "validTill",
            "baseName": "validTill",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return ForexQuote.attributeTypeMap;
    }
}

