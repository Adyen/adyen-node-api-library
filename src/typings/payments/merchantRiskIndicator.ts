/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v51/authorise ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Amount } from './amount';

export class MerchantRiskIndicator {
    /**
    * Whether the chosen delivery address is identical to the billing address.
    */
    'addressMatch'?: boolean;
    /**
    * Indicator regarding the delivery address. Allowed values: * `shipToBillingAddress` * `shipToVerifiedAddress` * `shipToNewAddress` * `shipToStore` * `digitalGoods` * `goodsNotShipped` * `other`
    */
    'deliveryAddressIndicator'?: MerchantRiskIndicator.DeliveryAddressIndicatorEnum;
    /**
    * The delivery email address (for digital goods).
    */
    'deliveryEmail'?: string;
    /**
    * The estimated delivery time for the shopper to receive the goods. Allowed values: * `electronicDelivery` * `sameDayShipping` * `overnightShipping` * `twoOrMoreDaysShipping`
    */
    'deliveryTimeframe'?: MerchantRiskIndicator.DeliveryTimeframeEnum;
    'giftCardAmount'?: Amount;
    /**
    * Number of individual prepaid or gift cards used for this purchase.
    */
    'giftCardCount'?: number;
    /**
    * For pre-order purchases, the expected date this product will be available to the shopper.
    */
    'preOrderDate'?: Date;
    /**
    * Indicator for whether this transaction is for pre-ordering a product.
    */
    'preOrderPurchase'?: boolean;
    /**
    * Indicator for whether the shopper has already purchased the same items in the past.
    */
    'reorderItems'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "addressMatch",
            "baseName": "addressMatch",
            "type": "boolean"
        },
        {
            "name": "deliveryAddressIndicator",
            "baseName": "deliveryAddressIndicator",
            "type": "MerchantRiskIndicator.DeliveryAddressIndicatorEnum"
        },
        {
            "name": "deliveryEmail",
            "baseName": "deliveryEmail",
            "type": "string"
        },
        {
            "name": "deliveryTimeframe",
            "baseName": "deliveryTimeframe",
            "type": "MerchantRiskIndicator.DeliveryTimeframeEnum"
        },
        {
            "name": "giftCardAmount",
            "baseName": "giftCardAmount",
            "type": "Amount"
        },
        {
            "name": "giftCardCount",
            "baseName": "giftCardCount",
            "type": "number"
        },
        {
            "name": "preOrderDate",
            "baseName": "preOrderDate",
            "type": "Date"
        },
        {
            "name": "preOrderPurchase",
            "baseName": "preOrderPurchase",
            "type": "boolean"
        },
        {
            "name": "reorderItems",
            "baseName": "reorderItems",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return MerchantRiskIndicator.attributeTypeMap;
    }
}

export namespace MerchantRiskIndicator {
    export enum DeliveryAddressIndicatorEnum {
        ShipToBillingAddress = <any> 'shipToBillingAddress',
        ShipToVerifiedAddress = <any> 'shipToVerifiedAddress',
        ShipToNewAddress = <any> 'shipToNewAddress',
        ShipToStore = <any> 'shipToStore',
        DigitalGoods = <any> 'digitalGoods',
        GoodsNotShipped = <any> 'goodsNotShipped',
        Other = <any> 'other'
    }
    export enum DeliveryTimeframeEnum {
        ElectronicDelivery = <any> 'electronicDelivery',
        SameDayShipping = <any> 'sameDayShipping',
        OvernightShipping = <any> 'overnightShipping',
        TwoOrMoreDaysShipping = <any> 'twoOrMoreDaysShipping'
    }
}
