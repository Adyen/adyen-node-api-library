/**
 * Adyen Payment API
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v51/authorise ```
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class ResponseAdditionalDataInstallments {
    /**
    * The number of installments that the payment amount should be charged with.  Example: 5 > Only relevant for card payments in countries that support installments.
    */
    'installmentsValue'?: string;
    /**
    * Type of installment. The value of `installmentType` should be **IssuerFinanced**.
    */
    'installmentPaymentDataInstallmentType'?: string;
    /**
    * Possible values: * PayInInstallmentsOnly * PayInFullOnly * PayInFullOrInstallments
    */
    'installmentPaymentDataPaymentOptions'?: string;
    /**
    * Total number of installments possible for this payment.
    */
    'installmentPaymentDataOptionItemNrNumberOfInstallments'?: string;
    /**
    * Interest rate for the installment period.
    */
    'installmentPaymentDataOptionItemNrInterestRate'?: string;
    /**
    * Installment fee amount in minor units.
    */
    'installmentPaymentDataOptionItemNrInstallmentFee'?: string;
    /**
    * Annual interest rate.
    */
    'installmentPaymentDataOptionItemNrAnnualPercentageRate'?: string;
    /**
    * First Installment Amount in minor units.
    */
    'installmentPaymentDataOptionItemNrFirstInstallmentAmount'?: string;
    /**
    * Subsequent Installment Amount in minor units.
    */
    'installmentPaymentDataOptionItemNrSubsequentInstallmentAmount'?: string;
    /**
    * Minimum number of installments possible for this payment.
    */
    'installmentPaymentDataOptionItemNrMinimumNumberOfInstallments'?: string;
    /**
    * Maximum number of installments possible for this payment.
    */
    'installmentPaymentDataOptionItemNrMaximumNumberOfInstallments'?: string;
    /**
    * Total amount in minor units.
    */
    'installmentPaymentDataOptionItemNrTotalAmountDue'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "installmentsValue",
            "baseName": "installments.value",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataInstallmentType",
            "baseName": "installmentPaymentData.installmentType",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataPaymentOptions",
            "baseName": "installmentPaymentData.paymentOptions",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrNumberOfInstallments",
            "baseName": "installmentPaymentData.option[itemNr].numberOfInstallments",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrInterestRate",
            "baseName": "installmentPaymentData.option[itemNr].interestRate",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrInstallmentFee",
            "baseName": "installmentPaymentData.option[itemNr].installmentFee",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrAnnualPercentageRate",
            "baseName": "installmentPaymentData.option[itemNr].annualPercentageRate",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrFirstInstallmentAmount",
            "baseName": "installmentPaymentData.option[itemNr].firstInstallmentAmount",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrSubsequentInstallmentAmount",
            "baseName": "installmentPaymentData.option[itemNr].subsequentInstallmentAmount",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrMinimumNumberOfInstallments",
            "baseName": "installmentPaymentData.option[itemNr].minimumNumberOfInstallments",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrMaximumNumberOfInstallments",
            "baseName": "installmentPaymentData.option[itemNr].maximumNumberOfInstallments",
            "type": "string"
        },
        {
            "name": "installmentPaymentDataOptionItemNrTotalAmountDue",
            "baseName": "installmentPaymentData.option[itemNr].totalAmountDue",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ResponseAdditionalDataInstallments.attributeTypeMap;
    }
}

