/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Address } from "./address";
import { FinancialReport } from "./financialReport";
import { PhoneNumber } from "./phoneNumber";
import { StockData } from "./stockData";
import { Support } from "./support";
import { TaxInformation } from "./taxInformation";
import { TaxReportingClassification } from "./taxReportingClassification";
import { WebData } from "./webData";


export class Organization {
    /**
    * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the governing country.
    */
    "countryOfGoverningLaw"?: string;
    /**
    * The date when the organization was incorporated in YYYY-MM-DD format.
    */
    "dateOfIncorporation"?: string;
    /**
    * Required if the value of `statusOfLegalProceeding` is one of the following:  **underJudicialAdministration**, **bankruptcyInsolvency**, **otherLegalMeasures**  The date at which a legal proceeding was initiated, in **YYYY-MM-DD** format. Example: **2000-02-12** 
    */
    "dateOfInitiationOfLegalProceeding"?: string;
    /**
    * Your description for the organization.
    */
    "description"?: string;
    /**
    * The organization\'s trading name, if different from the registered legal name.
    */
    "doingBusinessAs"?: string;
    /**
    * Set this to **true** if the organization or legal arrangement does not have a `Doing business as` name.
    */
    "doingBusinessAsAbsent"?: boolean | null;
    /**
    * The sector of the economy the legal entity operates within, represented by a 2-4 digit code that may include a \".\". Example: 45.11  You can locate economic sector codes for your area by referencing codes defined by the NACE (Nomenclature of Economic Activities) used in the European Union. 
    */
    "economicSector"?: string;
    /**
    * The email address of the legal entity.
    */
    "email"?: string;
    /**
    * The financial report information of the organization.
    */
    "financialReports"?: Array<FinancialReport>;
    /**
    * The global legal entity identifier for the organization.
    */
    "globalLegalEntityIdentifier"?: string;
    /**
    * Indicates that the registered business address is also the company\'s headquarters.
    */
    "headOfficeIndicator"?: boolean;
    /**
    * The institutional sector the organization operates within.
    */
    "institutionalSector"?: Organization.InstitutionalSectorEnum;
    /**
    * The type of business entity as defined in the national legal system. Use a legal form listed within the accepted legal forms compiled by the Central Bank of Europe. 
    */
    "legalForm"?: string;
    /**
    * The organization\'s legal name.
    */
    "legalName": string;
    "phone"?: PhoneNumber | null;
    "principalPlaceOfBusiness"?: Address | null;
    "registeredAddress": Address;
    /**
    * The organization\'s registration number.
    */
    "registrationNumber"?: string;
    /**
    * Set this to **true** if the organization does not have a registration number available. Only applicable for organizations in New Zealand, and incorporated partnerships and government organizations in Australia.
    */
    "registrationNumberAbsent"?: boolean | null;
    /**
    * The status of any current or past legal action taken against the legal entity.  Possible values: **noLegalActionsTaken**, **underJudicialAdministration**, **bankruptcyInsolvency**, **otherLegalMeasures**  If the value of this field is **noLegalActionsTaken**, then `dateOfInitiationOfLegalProceeding` is not required. Otherwise, it is required. 
    */
    "statusOfLegalProceeding"?: Organization.StatusOfLegalProceedingEnum;
    "stockData"?: StockData | null;
    "support"?: Support | null;
    /**
    * The tax information of the organization.
    */
    "taxInformation"?: Array<TaxInformation>;
    "taxReportingClassification"?: TaxReportingClassification | null;
    /**
    * Type of organization.  Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
    */
    "type"?: Organization.TypeEnum;
    /**
    * The reason the organization has not provided a VAT number.  Possible values: **industryExemption**, **belowTaxThreshold**.
    */
    "vatAbsenceReason"?: Organization.VatAbsenceReasonEnum;
    /**
    * The organization\'s VAT number.
    */
    "vatNumber"?: string;
    "webData"?: WebData | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "countryOfGoverningLaw",
            "baseName": "countryOfGoverningLaw",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateOfIncorporation",
            "baseName": "dateOfIncorporation",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateOfInitiationOfLegalProceeding",
            "baseName": "dateOfInitiationOfLegalProceeding",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "doingBusinessAs",
            "baseName": "doingBusinessAs",
            "type": "string",
            "format": ""
        },
        {
            "name": "doingBusinessAsAbsent",
            "baseName": "doingBusinessAsAbsent",
            "type": "boolean | null",
            "format": ""
        },
        {
            "name": "economicSector",
            "baseName": "economicSector",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "financialReports",
            "baseName": "financialReports",
            "type": "Array<FinancialReport>",
            "format": ""
        },
        {
            "name": "globalLegalEntityIdentifier",
            "baseName": "globalLegalEntityIdentifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "headOfficeIndicator",
            "baseName": "headOfficeIndicator",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "institutionalSector",
            "baseName": "institutionalSector",
            "type": "Organization.InstitutionalSectorEnum",
            "format": ""
        },
        {
            "name": "legalForm",
            "baseName": "legalForm",
            "type": "string",
            "format": ""
        },
        {
            "name": "legalName",
            "baseName": "legalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "PhoneNumber | null",
            "format": ""
        },
        {
            "name": "principalPlaceOfBusiness",
            "baseName": "principalPlaceOfBusiness",
            "type": "Address | null",
            "format": ""
        },
        {
            "name": "registeredAddress",
            "baseName": "registeredAddress",
            "type": "Address",
            "format": ""
        },
        {
            "name": "registrationNumber",
            "baseName": "registrationNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "registrationNumberAbsent",
            "baseName": "registrationNumberAbsent",
            "type": "boolean | null",
            "format": ""
        },
        {
            "name": "statusOfLegalProceeding",
            "baseName": "statusOfLegalProceeding",
            "type": "Organization.StatusOfLegalProceedingEnum",
            "format": ""
        },
        {
            "name": "stockData",
            "baseName": "stockData",
            "type": "StockData | null",
            "format": ""
        },
        {
            "name": "support",
            "baseName": "support",
            "type": "Support | null",
            "format": ""
        },
        {
            "name": "taxInformation",
            "baseName": "taxInformation",
            "type": "Array<TaxInformation>",
            "format": ""
        },
        {
            "name": "taxReportingClassification",
            "baseName": "taxReportingClassification",
            "type": "TaxReportingClassification | null",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Organization.TypeEnum",
            "format": ""
        },
        {
            "name": "vatAbsenceReason",
            "baseName": "vatAbsenceReason",
            "type": "Organization.VatAbsenceReasonEnum",
            "format": ""
        },
        {
            "name": "vatNumber",
            "baseName": "vatNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "webData",
            "baseName": "webData",
            "type": "WebData | null",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Organization.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace Organization {
    export enum InstitutionalSectorEnum {
        NonFinancialCorporation = 'nonFinancialCorporation',
        CentralBank = 'centralBank',
        CreditInstitutions = 'creditInstitutions',
        DepositTakingCorporations = 'depositTakingCorporations',
        MoneyMarketFunds = 'moneyMarketFunds',
        NonMmfInvestmentFunds = 'nonMMFInvestmentFunds',
        FinancialVehicleCorporation = 'financialVehicleCorporation',
        OtherFinancialIntermediaries = 'otherFinancialIntermediaries',
        FinancialAuxiliaries = 'financialAuxiliaries',
        CaptiveFinancialInstitutionsAndMoneyLenders = 'captiveFinancialInstitutionsAndMoneyLenders',
        InsuranceCorporations = 'insuranceCorporations',
        PensionFunds = 'pensionFunds',
        CentralGovernment = 'centralGovernment',
        StateGovernment = 'stateGovernment',
        LocalGovernment = 'localGovernment',
        SocialSecurityFunds = 'socialSecurityFunds',
        NonProfitInstitutionsServingHouseholds = 'nonProfitInstitutionsServingHouseholds'
    }
    export enum StatusOfLegalProceedingEnum {
        NoLegalActionsTaken = 'noLegalActionsTaken',
        UnderJudicialAdministration = 'underJudicialAdministration',
        BankruptcyInsolvency = 'bankruptcyInsolvency',
        OtherLegalMeasures = 'otherLegalMeasures'
    }
    export enum TypeEnum {
        AssociationIncorporated = 'associationIncorporated',
        GovernmentalOrganization = 'governmentalOrganization',
        ListedPublicCompany = 'listedPublicCompany',
        NonProfit = 'nonProfit',
        PartnershipIncorporated = 'partnershipIncorporated',
        PrivateCompany = 'privateCompany'
    }
    export enum VatAbsenceReasonEnum {
        IndustryExemption = 'industryExemption',
        BelowTaxThreshold = 'belowTaxThreshold'
    }
}
