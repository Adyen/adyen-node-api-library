/*
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { AdditionalBankIdentification } from './additionalBankIdentification';

export class NumberAndBicAccountIdentification {
    /**
    * The bank account number, without separators or whitespace. The length and format depends on the bank or country.
    */
    'accountNumber': string;
    'additionalBankIdentification'?: AdditionalBankIdentification;
    /**
    * The bank\'s 8- or 11-character BIC or SWIFT code.
    */
    'bic': string;
    /**
    * Business accounts with a `formFactor` value of **physical** are business accounts issued under the central bank of that country. The default value is **physical** for NL, US, and UK business accounts.   Adyen creates a local IBAN for business accounts when the `formFactor`Ã¥ value is set to **virtual**. The local IBANs that are supported are for DE and FR, which reference a physical NL account, with funds being routed through the central bank of NL.
    */
    'formFactor'?: string | null;
    /**
    * **numberAndBic**
    */
    'type': NumberAndBicAccountIdentification.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accountNumber",
            "baseName": "accountNumber",
            "type": "string"
        },
        {
            "name": "additionalBankIdentification",
            "baseName": "additionalBankIdentification",
            "type": "AdditionalBankIdentification"
        },
        {
            "name": "bic",
            "baseName": "bic",
            "type": "string"
        },
        {
            "name": "formFactor",
            "baseName": "formFactor",
            "type": "string | null"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "NumberAndBicAccountIdentification.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return NumberAndBicAccountIdentification.attributeTypeMap;
    }
}

export namespace NumberAndBicAccountIdentification {
    export enum TypeEnum {
        NumberAndBic = 'numberAndBic'
    }
}
