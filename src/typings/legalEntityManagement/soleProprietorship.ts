/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Address } from "./address";
import { FinancialReport } from "./financialReport";
import { TaxInformation } from "./taxInformation";


export class SoleProprietorship {
    /**
    * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the governing country.
    */
    "countryOfGoverningLaw": string;
    /**
    * The date when the legal arrangement was incorporated in YYYY-MM-DD format.
    */
    "dateOfIncorporation"?: string;
    /**
    * The registered name, if different from the `name`.
    */
    "doingBusinessAs"?: string;
    /**
    * Set this to **true** if the legal arrangement does not have a `Doing business as` name.
    */
    "doingBusinessAsAbsent"?: boolean | null;
    /**
    * The information from the financial report of the sole proprietorship.
    */
    "financialReports"?: Array<FinancialReport>;
    /**
    * The legal name.
    */
    "name": string;
    "principalPlaceOfBusiness"?: Address | null;
    "registeredAddress": Address;
    /**
    * The registration number.
    */
    "registrationNumber"?: string;
    /**
    * The tax information is absent.
    */
    "taxAbsent"?: boolean | null;
    /**
    * The tax information of the entity.
    */
    "taxInformation"?: Array<TaxInformation>;
    /**
    * The reason for not providing a VAT number.  Possible values: **industryExemption**, **belowTaxThreshold**.
    */
    "vatAbsenceReason"?: SoleProprietorship.VatAbsenceReasonEnum;
    /**
    * The VAT number.
    */
    "vatNumber"?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "countryOfGoverningLaw",
            "baseName": "countryOfGoverningLaw",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateOfIncorporation",
            "baseName": "dateOfIncorporation",
            "type": "string",
            "format": ""
        },
        {
            "name": "doingBusinessAs",
            "baseName": "doingBusinessAs",
            "type": "string",
            "format": ""
        },
        {
            "name": "doingBusinessAsAbsent",
            "baseName": "doingBusinessAsAbsent",
            "type": "boolean | null",
            "format": ""
        },
        {
            "name": "financialReports",
            "baseName": "financialReports",
            "type": "Array<FinancialReport>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "principalPlaceOfBusiness",
            "baseName": "principalPlaceOfBusiness",
            "type": "Address | null",
            "format": ""
        },
        {
            "name": "registeredAddress",
            "baseName": "registeredAddress",
            "type": "Address",
            "format": ""
        },
        {
            "name": "registrationNumber",
            "baseName": "registrationNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "taxAbsent",
            "baseName": "taxAbsent",
            "type": "boolean | null",
            "format": ""
        },
        {
            "name": "taxInformation",
            "baseName": "taxInformation",
            "type": "Array<TaxInformation>",
            "format": ""
        },
        {
            "name": "vatAbsenceReason",
            "baseName": "vatAbsenceReason",
            "type": "SoleProprietorship.VatAbsenceReasonEnum",
            "format": ""
        },
        {
            "name": "vatNumber",
            "baseName": "vatNumber",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SoleProprietorship.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace SoleProprietorship {
    export enum VatAbsenceReasonEnum {
        IndustryExemption = 'industryExemption',
        BelowTaxThreshold = 'belowTaxThreshold'
    }
}
