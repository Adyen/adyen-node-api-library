/**
 * Issuing: Balance Platform API
 * Adyen Issuing lets you create and issue cards using the Balance Platform API. Use the API to onboard users as account holders in your balance platform, create balance accounts, and issue cards.  For more information, refer to [Adyen Issuing](https://docs.adyen.com/issuing).   ## Authentication To connect to the Balance Platform API, you must use your basic authentication credentials. To create your web service user and generate credentials, refer to [API credentials](https://docs.adyen.com/development-resources/api-credentials#basic-authentication). Then use the credentials to authenticate your request, for example:  ``` curl -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new basic authentication credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Balance Platform API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://balanceplatform-api-test.adyen.com/bcl/v1 ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Card } from './card';

export class PaymentInstrument {
    /**
    * The ID of the balance account associated with the payment instrument.
    */
    'balanceAccountId': string;
    'card'?: Card;
    /**
    * Your description for the payment instrument, maximum 300 characters.
    */
    'description'?: string;
    /**
    * Unique identifier for the payment instrument.
    */
    'id': string;
    /**
    * Country where the payment instrument is being issued, in ISO-3166-1 alpha-2 format. For example, **NL**, **US**.
    */
    'issuingCountryCode': string;
    /**
    * The ID of a payment instrument group that this payment instrument is part of.
    */
    'paymentInstrumentGroupId'?: string;
    /**
    * The status of the payment instrument. If a status is not specified when creating a payment instrument, the status is set to **Active** by default. However, there can be exceptions based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards issued in the US, the default status is **Requested**.  Possible values:  * **Active**:  The payment instrument is active and can be used to make payments.    * **Requested**: The payment instrument has been requested. This state is applicable when creating physical cards.   * **Inactive**: The payment instrument is inactive and cannot be used to make payments.    * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments.    * **Closed**: The payment instrument is permanently closed. This action cannot be undone.   * **Stolen**    * **Lost**   
    */
    'status'?: PaymentInstrument.StatusEnum;
    /**
    * The type of payment instrument.  Possible value: **card** 
    */
    'type': PaymentInstrument.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "balanceAccountId",
            "baseName": "balanceAccountId",
            "type": "string"
        },
        {
            "name": "card",
            "baseName": "card",
            "type": "Card"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "issuingCountryCode",
            "baseName": "issuingCountryCode",
            "type": "string"
        },
        {
            "name": "paymentInstrumentGroupId",
            "baseName": "paymentInstrumentGroupId",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "PaymentInstrument.StatusEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentInstrument.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return PaymentInstrument.attributeTypeMap;
    }
}

export namespace PaymentInstrument {
    export enum StatusEnum {
        Active = <any> 'Active',
        Closed = <any> 'Closed',
        Inactive = <any> 'Inactive',
        Lost = <any> 'Lost',
        Requested = <any> 'Requested',
        Stolen = <any> 'Stolen',
        Suspended = <any> 'Suspended'
    }
    export enum TypeEnum {
        BankAccount = <any> 'bankAccount',
        Card = <any> 'card',
        Unknown = <any> 'unknown'
    }
}
