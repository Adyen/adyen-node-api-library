/*
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { CardholderReceipt } from "./cardholderReceipt";
import { Connectivity } from "./connectivity";
import { Gratuity } from "./gratuity";
import { Hardware } from "./hardware";
import { Localization } from "./localization";
import { Nexo } from "./nexo";
import { OfflineProcessing } from "./offlineProcessing";
import { Opi } from "./opi";
import { Passcodes } from "./passcodes";
import { PayAtTable } from "./payAtTable";
import { Payment } from "./payment";
import { ReceiptOptions } from "./receiptOptions";
import { ReceiptPrinting } from "./receiptPrinting";
import { Refunds } from "./refunds";
import { Signature } from "./signature";
import { Standalone } from "./standalone";
import { StoreAndForward } from "./storeAndForward";
import { Surcharge } from "./surcharge";
import { TapToPay } from "./tapToPay";
import { TerminalInstructions } from "./terminalInstructions";
import { Timeouts } from "./timeouts";
import { WifiProfiles } from "./wifiProfiles";


export class TerminalSettings {
    "cardholderReceipt"?: CardholderReceipt;
    "connectivity"?: Connectivity;
    /**
    * Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.
    */
    "gratuities"?: Array<Gratuity> | null;
    "hardware"?: Hardware;
    "localization"?: Localization;
    "nexo"?: Nexo;
    "offlineProcessing"?: OfflineProcessing;
    "opi"?: Opi;
    "passcodes"?: Passcodes;
    "payAtTable"?: PayAtTable;
    "payment"?: Payment;
    "receiptOptions"?: ReceiptOptions;
    "receiptPrinting"?: ReceiptPrinting;
    "refunds"?: Refunds;
    "signature"?: Signature;
    "standalone"?: Standalone;
    "storeAndForward"?: StoreAndForward;
    "surcharge"?: Surcharge;
    "tapToPay"?: TapToPay;
    "terminalInstructions"?: TerminalInstructions;
    "timeouts"?: Timeouts;
    "wifiProfiles"?: WifiProfiles;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cardholderReceipt",
            "baseName": "cardholderReceipt",
            "type": "CardholderReceipt",
            "format": ""
        },
        {
            "name": "connectivity",
            "baseName": "connectivity",
            "type": "Connectivity",
            "format": ""
        },
        {
            "name": "gratuities",
            "baseName": "gratuities",
            "type": "Array<Gratuity>",
            "format": ""
        },
        {
            "name": "hardware",
            "baseName": "hardware",
            "type": "Hardware",
            "format": ""
        },
        {
            "name": "localization",
            "baseName": "localization",
            "type": "Localization",
            "format": ""
        },
        {
            "name": "nexo",
            "baseName": "nexo",
            "type": "Nexo",
            "format": ""
        },
        {
            "name": "offlineProcessing",
            "baseName": "offlineProcessing",
            "type": "OfflineProcessing",
            "format": ""
        },
        {
            "name": "opi",
            "baseName": "opi",
            "type": "Opi",
            "format": ""
        },
        {
            "name": "passcodes",
            "baseName": "passcodes",
            "type": "Passcodes",
            "format": ""
        },
        {
            "name": "payAtTable",
            "baseName": "payAtTable",
            "type": "PayAtTable",
            "format": ""
        },
        {
            "name": "payment",
            "baseName": "payment",
            "type": "Payment",
            "format": ""
        },
        {
            "name": "receiptOptions",
            "baseName": "receiptOptions",
            "type": "ReceiptOptions",
            "format": ""
        },
        {
            "name": "receiptPrinting",
            "baseName": "receiptPrinting",
            "type": "ReceiptPrinting",
            "format": ""
        },
        {
            "name": "refunds",
            "baseName": "refunds",
            "type": "Refunds",
            "format": ""
        },
        {
            "name": "signature",
            "baseName": "signature",
            "type": "Signature",
            "format": ""
        },
        {
            "name": "standalone",
            "baseName": "standalone",
            "type": "Standalone",
            "format": ""
        },
        {
            "name": "storeAndForward",
            "baseName": "storeAndForward",
            "type": "StoreAndForward",
            "format": ""
        },
        {
            "name": "surcharge",
            "baseName": "surcharge",
            "type": "Surcharge",
            "format": ""
        },
        {
            "name": "tapToPay",
            "baseName": "tapToPay",
            "type": "TapToPay",
            "format": ""
        },
        {
            "name": "terminalInstructions",
            "baseName": "terminalInstructions",
            "type": "TerminalInstructions",
            "format": ""
        },
        {
            "name": "timeouts",
            "baseName": "timeouts",
            "type": "Timeouts",
            "format": ""
        },
        {
            "name": "wifiProfiles",
            "baseName": "wifiProfiles",
            "type": "WifiProfiles",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TerminalSettings.attributeTypeMap;
    }

    public constructor() {
    }
}

