/*
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class Profile {
    /**
    * The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**.
    */
    "authType": string;
    /**
    * Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.
    */
    "autoWifi"?: boolean;
    /**
    * Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.
    */
    "bssType": string;
    /**
    * The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.
    */
    "channel"?: number;
    /**
    * Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.
    */
    "defaultProfile"?: boolean;
    /**
    * Specifies the server domain name for EAP-TLS and EAP-PEAP WiFi profiles on Android 11 and above.
    */
    "domainSuffix"?: string;
    /**
    * For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**
    */
    "eap"?: string;
    "eapCaCert"?: any;
    "eapClientCert"?: any;
    "eapClientKey"?: any;
    /**
    * For `eap` **tls**. The password of the RSA key file, if that file is password-protected.
    */
    "eapClientPwd"?: string;
    /**
    * For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.
    */
    "eapIdentity"?: string;
    "eapIntermediateCert"?: any;
    /**
    * For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.
    */
    "eapPwd"?: string;
    /**
    * Indicates if the network doesn\'t broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.
    */
    "hiddenSsid"?: boolean;
    /**
    * Your name for the Wi-Fi profile.
    */
    "name"?: string;
    /**
    * For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.
    */
    "psk"?: string;
    /**
    * The name of the wireless network.
    */
    "ssid": string;
    /**
    * The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**
    */
    "wsec": string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "authType",
            "baseName": "authType",
            "type": "string",
            "format": ""
        },
        {
            "name": "autoWifi",
            "baseName": "autoWifi",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "bssType",
            "baseName": "bssType",
            "type": "string",
            "format": ""
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "defaultProfile",
            "baseName": "defaultProfile",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "domainSuffix",
            "baseName": "domainSuffix",
            "type": "string",
            "format": ""
        },
        {
            "name": "eap",
            "baseName": "eap",
            "type": "string",
            "format": ""
        },
        {
            "name": "eapCaCert",
            "baseName": "eapCaCert",
            "type": "any",
            "format": ""
        },
        {
            "name": "eapClientCert",
            "baseName": "eapClientCert",
            "type": "any",
            "format": ""
        },
        {
            "name": "eapClientKey",
            "baseName": "eapClientKey",
            "type": "any",
            "format": ""
        },
        {
            "name": "eapClientPwd",
            "baseName": "eapClientPwd",
            "type": "string",
            "format": ""
        },
        {
            "name": "eapIdentity",
            "baseName": "eapIdentity",
            "type": "string",
            "format": ""
        },
        {
            "name": "eapIntermediateCert",
            "baseName": "eapIntermediateCert",
            "type": "any",
            "format": ""
        },
        {
            "name": "eapPwd",
            "baseName": "eapPwd",
            "type": "string",
            "format": ""
        },
        {
            "name": "hiddenSsid",
            "baseName": "hiddenSsid",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "psk",
            "baseName": "psk",
            "type": "string",
            "format": ""
        },
        {
            "name": "ssid",
            "baseName": "ssid",
            "type": "string",
            "format": ""
        },
        {
            "name": "wsec",
            "baseName": "wsec",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Profile.attributeTypeMap;
    }

    public constructor() {
    }
}

