/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { StoreLocation } from './storeLocation';
import { StoreSplitConfiguration } from './storeSplitConfiguration';

export class StoreCreationWithMerchantCodeRequest {
    'address': StoreLocation;
    /**
    * The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/legalentity/latest/post/businessLines#responses-200-id) that the store is associated with. If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
    */
    'businessLineIds'?: Array<string>;
    /**
    * Your description of the store.
    */
    'description': string;
    /**
    * Used by certain payment methods and tax authorities to uniquely identify the store.  For CNPJ in Brazil, ZIP in Australia and SIRET in France. This field is conditionally required if the store is in Brazil, Australia or France.  For CNPJ the format is 00.000.000/0000-00, can be submitted as just digits, or with dots, slash & hyphen.  For Australian stores ZIP an optional field used by the Zip payment method.  For SIRET the format is 14 digits.
    */
    'externalReferenceId'?: string;
    /**
    * The unique identifier of the merchant account that the store belongs to.
    */
    'merchantId': string;
    /**
    * The phone number of the store, including \'+\' and country code.
    */
    'phoneNumber': string;
    /**
    * Your reference to recognize the store by. Also known as the store code.  Allowed characters: lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).  If you do not provide a reference in your POST request, it is populated with the Adyen-generated [id](https://docs.adyen.com/api-explorer/Management/latest/post/stores#responses-200-id).
    */
    'reference'?: string;
    /**
    * The store name to be shown on the shopper\'s bank or credit card statement and on the shopper receipt. Maximum length: 22 characters; can\'t be all numbers.
    */
    'shopperStatement': string;
    'splitConfiguration'?: StoreSplitConfiguration;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "StoreLocation"
        },
        {
            "name": "businessLineIds",
            "baseName": "businessLineIds",
            "type": "Array<string>"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "externalReferenceId",
            "baseName": "externalReferenceId",
            "type": "string"
        },
        {
            "name": "merchantId",
            "baseName": "merchantId",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phoneNumber",
            "type": "string"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string"
        },
        {
            "name": "shopperStatement",
            "baseName": "shopperStatement",
            "type": "string"
        },
        {
            "name": "splitConfiguration",
            "baseName": "splitConfiguration",
            "type": "StoreSplitConfiguration"
        }    ];

    static getAttributeTypeMap() {
        return StoreCreationWithMerchantCodeRequest.attributeTypeMap;
    }
}

