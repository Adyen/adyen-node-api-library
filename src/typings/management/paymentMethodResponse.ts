/*
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { PaginationLinks } from "./paginationLinks";
import { PaymentMethod } from "./paymentMethod";


export class PaymentMethodResponse {
    "_links"?: PaginationLinks | null;
    /**
    * The list of supported payment methods and their details.
    */
    "data"?: Array<PaymentMethod>;
    /**
    * Total number of items.
    */
    "itemsTotal": number;
    /**
    * Total number of pages.
    */
    "pagesTotal": number;
    /**
    * The payment method types that were not successfully requested and their corresponding errors.
    */
    "typesWithErrors"?: Array<PaymentMethodResponse.TypesWithErrorsEnum>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "_links",
            "baseName": "_links",
            "type": "PaginationLinks | null",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "Array<PaymentMethod>",
            "format": ""
        },
        {
            "name": "itemsTotal",
            "baseName": "itemsTotal",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "pagesTotal",
            "baseName": "pagesTotal",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "typesWithErrors",
            "baseName": "typesWithErrors",
            "type": "PaymentMethodResponse.TypesWithErrorsEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethodResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace PaymentMethodResponse {
    export enum TypesWithErrorsEnum {
        Abrapetite = 'abrapetite',
        AbrapetiteCredit = 'abrapetite_credit',
        AbrapetiteDebit = 'abrapetite_debit',
        AbrapetitePrepaid = 'abrapetite_prepaid',
        Accel = 'accel',
        Ach = 'ach',
        Affirm = 'affirm',
        Afterpaytouch = 'afterpaytouch',
        Alelo = 'alelo',
        Alipay = 'alipay',
        AlipayHk = 'alipay_hk',
        AlipayPlus = 'alipay_plus',
        AlipayWap = 'alipay_wap',
        Amex = 'amex',
        Applepay = 'applepay',
        Avancard = 'avancard',
        AvancardCredit = 'avancard_credit',
        AvancardDebit = 'avancard_debit',
        BaneseCard = 'banese_card',
        BaneseCardCredit = 'banese_card_credit',
        BaneseCardDebit = 'banese_card_debit',
        BaneseCardPrepaid = 'banese_card_prepaid',
        Bcmc = 'bcmc',
        Blik = 'blik',
        Cartebancaire = 'cartebancaire',
        Clearpay = 'clearpay',
        Clicktopay = 'clicktopay',
        Cooper = 'cooper',
        CooperCredit = 'cooper_credit',
        CooperDebit = 'cooper_debit',
        CooperFoodDebit = 'cooper_food_debit',
        CooperMealDebit = 'cooper_meal_debit',
        CooperPrepaid = 'cooper_prepaid',
        CooperPrivateCredit = 'cooper_private_credit',
        CooperRetailCredit = 'cooper_retail_credit',
        Credtodos = 'credtodos',
        CredtodosPrivateCredit = 'credtodos_private_credit',
        CredtodosPrivateDebit = 'credtodos_private_debit',
        Cup = 'cup',
        Diners = 'diners',
        DirectdebitGb = 'directdebit_GB',
        Discover = 'discover',
        EbankingFi = 'ebanking_FI',
        EftDirectdebitCa = 'eft_directdebit_CA',
        EftposAustralia = 'eftpos_australia',
        Elo = 'elo',
        Elocredit = 'elocredit',
        Elodebit = 'elodebit',
        Girocard = 'girocard',
        Googlepay = 'googlepay',
        GreenCard = 'green_card',
        GreenCardCredit = 'green_card_credit',
        GreenCardDebit = 'green_card_debit',
        GreenCardFoodPrepaid = 'green_card_food_prepaid',
        GreenCardMealPrepaid = 'green_card_meal_prepaid',
        GreenCardPrepaid = 'green_card_prepaid',
        Hiper = 'hiper',
        Hipercard = 'hipercard',
        Ideal = 'ideal',
        InteracCard = 'interac_card',
        Jcb = 'jcb',
        Klarna = 'klarna',
        KlarnaAccount = 'klarna_account',
        KlarnaPaynow = 'klarna_paynow',
        LeCard = 'le_card',
        LeCardCredit = 'le_card_credit',
        LeCardDebit = 'le_card_debit',
        Maestro = 'maestro',
        MaestroUsa = 'maestro_usa',
        Maxifrota = 'maxifrota',
        MaxifrotaPrepaid = 'maxifrota_prepaid',
        Mbway = 'mbway',
        Mc = 'mc',
        Mcdebit = 'mcdebit',
        MealVoucherFr = 'mealVoucher_FR',
        Megaleve = 'megaleve',
        MegaleveCredit = 'megaleve_credit',
        MegaleveDebit = 'megaleve_debit',
        Mobilepay = 'mobilepay',
        Multibanco = 'multibanco',
        Nutricash = 'nutricash',
        NutricashPrepaid = 'nutricash_prepaid',
        Nyce = 'nyce',
        OnlineBankingPl = 'onlineBanking_PL',
        Paybybank = 'paybybank',
        PaybybankPlaid = 'paybybank_plaid',
        Payme = 'payme',
        PaymePos = 'payme_pos',
        Paynow = 'paynow',
        PaynowPos = 'paynow_pos',
        Paypal = 'paypal',
        Payto = 'payto',
        PersonalCard = 'personal_card',
        PersonalCardCredit = 'personal_card_credit',
        PersonalCardDebit = 'personal_card_debit',
        Pulse = 'pulse',
        Romcard = 'romcard',
        RomcardCredit = 'romcard_credit',
        RomcardDebit = 'romcard_debit',
        Senff = 'senff',
        SenffCredit = 'senff_credit',
        Sepadirectdebit = 'sepadirectdebit',
        Sodexo = 'sodexo',
        Star = 'star',
        Swish = 'swish',
        Ticket = 'ticket',
        TodoGiftcard = 'todo_giftcard',
        Trustly = 'trustly',
        Twint = 'twint',
        TwintPos = 'twint_pos',
        UpBrazil = 'up_brazil',
        UpBrazilCredit = 'up_brazil_credit',
        UpBrazilDebit = 'up_brazil_debit',
        UpBrazilPrepaid = 'up_brazil_prepaid',
        ValeRefeicao = 'vale_refeicao',
        ValeRefeicaoPrepaid = 'vale_refeicao_prepaid',
        VegasCard = 'vegas_card',
        VegasCardCredit = 'vegas_card_credit',
        VegasCardDebit = 'vegas_card_debit',
        VeroCard = 'vero_card',
        VeroCardCredit = 'vero_card_credit',
        VeroCardDebit = 'vero_card_debit',
        VeroCardPrepaid = 'vero_card_prepaid',
        Vipps = 'vipps',
        Visa = 'visa',
        Visadebit = 'visadebit',
        Vpay = 'vpay',
        Wechatpay = 'wechatpay',
        WechatpayPos = 'wechatpay_pos'
    }
}
