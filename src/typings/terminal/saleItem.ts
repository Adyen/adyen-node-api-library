/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2020 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */

/**
 * Terminal API
 * Definition of Terminal API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



export class SaleItem {
    "additionalProductInfo"?: string;
    "eanUpc"?: string;
    "itemAmount": number;
    "itemID": number;
    "productCode": string;
    "productLabel"?: string;
    "quantity"?: number;
    "saleChannel"?: string;
    "taxCode"?: string;
    "unitOfMeasure"?: SaleItem.UnitOfMeasureEnum;
    "unitPrice"?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: {name: string, baseName: string, type: string}[] = [
        {
            "name": "additionalProductInfo",
            "baseName": "AdditionalProductInfo",
            "type": "string"
        },
        {
            "name": "eanUpc",
            "baseName": "EanUpc",
            "type": "string"
        },
        {
            "name": "itemAmount",
            "baseName": "ItemAmount",
            "type": "number"
        },
        {
            "name": "itemID",
            "baseName": "ItemID",
            "type": "number"
        },
        {
            "name": "productCode",
            "baseName": "ProductCode",
            "type": "string"
        },
        {
            "name": "productLabel",
            "baseName": "ProductLabel",
            "type": "string"
        },
        {
            "name": "quantity",
            "baseName": "Quantity",
            "type": "number"
        },
        {
            "name": "saleChannel",
            "baseName": "SaleChannel",
            "type": "string"
        },
        {
            "name": "taxCode",
            "baseName": "TaxCode",
            "type": "string"
        },
        {
            "name": "unitOfMeasure",
            "baseName": "UnitOfMeasure",
            "type": "SaleItem.UnitOfMeasureEnum"
        },
        {
            "name": "unitPrice",
            "baseName": "UnitPrice",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return SaleItem.attributeTypeMap;
    }
}

export namespace SaleItem {
    export enum UnitOfMeasureEnum {
        Case = "Case" as any,
        Centilitre = "Centilitre" as any,
        Centimetre = "Centimetre" as any,
        Foot = "Foot" as any,
        Gram = "Gram" as any,
        Inch = "Inch" as any,
        Kilogram = "Kilogram" as any,
        Kilometre = "Kilometre" as any,
        Litre = "Litre" as any,
        Meter = "Meter" as any,
        Mile = "Mile" as any,
        Other = "Other" as any,
        Ounce = "Ounce" as any,
        Pint = "Pint" as any,
        Pound = "Pound" as any,
        Quart = "Quart" as any,
        UKGallon = "UKGallon" as any,
        USGallon = "USGallon" as any,
        Yard = "Yard" as any
    }
}
