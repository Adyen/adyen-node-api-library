/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2020 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */

/**
 * Terminal API
 * Definition of Terminal API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { ContentInformation } from './contentInformation';
import { InputCommandType } from './inputCommandType';

export class Input {
    'confirmedFlag'?: boolean;
    'digitInput'?: string;
    'functionKey'?: string;
    'inputCommand': InputCommandType;
    'menuEntryNumber'?: number;
    'password'?: ContentInformation;
    'textInput'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "confirmedFlag",
            "baseName": "ConfirmedFlag",
            "type": "boolean"
        },
        {
            "name": "digitInput",
            "baseName": "DigitInput",
            "type": "string"
        },
        {
            "name": "functionKey",
            "baseName": "FunctionKey",
            "type": "string"
        },
        {
            "name": "inputCommand",
            "baseName": "InputCommand",
            "type": "InputCommandType"
        },
        {
            "name": "menuEntryNumber",
            "baseName": "MenuEntryNumber",
            "type": "number"
        },
        {
            "name": "password",
            "baseName": "Password",
            "type": "ContentInformation"
        },
        {
            "name": "textInput",
            "baseName": "TextInput",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Input.attributeTypeMap;
    }
}

