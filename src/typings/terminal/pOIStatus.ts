/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2020 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */

/**
 * Terminal API
 * Definition of Terminal API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { CashHandlingDevice } from "./cashHandlingDevice";
import { GlobalStatusType } from "./globalStatusType";

export class POIStatus {
    "cardReaderOkFlag"?: boolean;
    "cashHandlingDevice"?: CashHandlingDevice[];
    "communicationOkFlag"?: boolean;
    "fraudPreventionFlag"?: boolean;
    "globalStatus": GlobalStatusType;
    "pEDOKFlag"?: boolean;
    "printerStatus"?: POIStatus.PrinterStatusEnum;
    "securityOkFlag"?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: {name: string, baseName: string, type: string}[] = [
        {
            "name": "cardReaderOkFlag",
            "baseName": "CardReaderOkFlag",
            "type": "boolean"
        },
        {
            "name": "cashHandlingDevice",
            "baseName": "CashHandlingDevice",
            "type": "Array<CashHandlingDevice>"
        },
        {
            "name": "communicationOkFlag",
            "baseName": "CommunicationOkFlag",
            "type": "boolean"
        },
        {
            "name": "fraudPreventionFlag",
            "baseName": "FraudPreventionFlag",
            "type": "boolean"
        },
        {
            "name": "globalStatus",
            "baseName": "GlobalStatus",
            "type": "GlobalStatusType"
        },
        {
            "name": "pEDOKFlag",
            "baseName": "PEDOKFlag",
            "type": "boolean"
        },
        {
            "name": "printerStatus",
            "baseName": "PrinterStatus",
            "type": "POIStatus.PrinterStatusEnum"
        },
        {
            "name": "securityOkFlag",
            "baseName": "SecurityOkFlag",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return POIStatus.attributeTypeMap;
    }
}

export namespace POIStatus {
    export enum PrinterStatusEnum {
        NoPaper = "NoPaper" as any,
        OK = "OK" as any,
        OutOfOrder = "OutOfOrder" as any,
        PaperJam = "PaperJam" as any,
        PaperLow = "PaperLow" as any
    }
}
