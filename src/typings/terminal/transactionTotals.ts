/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2020 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */

/**
 * Terminal API
 * Definition of Terminal API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { LoyaltyTotals } from './loyaltyTotals';
import { PaymentInstrumentType } from './paymentInstrumentType';
import { PaymentTotals } from './paymentTotals';

export class TransactionTotals {
    'acquirerID'?: string;
    'cardBrand'?: string;
    'errorCondition'?: TransactionTotals.ErrorConditionEnum;
    'hostReconciliationID'?: string;
    'loyaltyCurrency'?: string;
    'loyaltyTotals'?: Array<LoyaltyTotals>;
    'loyaltyUnit'?: TransactionTotals.LoyaltyUnitEnum;
    'operatorID'?: string;
    'paymentCurrency'?: string;
    'paymentInstrumentType': PaymentInstrumentType;
    'paymentTotals'?: Array<PaymentTotals>;
    'pOIID'?: string;
    'saleID'?: string;
    'shiftNumber'?: string;
    'totalsGroupID'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "acquirerID",
            "baseName": "AcquirerID",
            "type": "string"
        },
        {
            "name": "cardBrand",
            "baseName": "CardBrand",
            "type": "string"
        },
        {
            "name": "errorCondition",
            "baseName": "ErrorCondition",
            "type": "TransactionTotals.ErrorConditionEnum"
        },
        {
            "name": "hostReconciliationID",
            "baseName": "HostReconciliationID",
            "type": "string"
        },
        {
            "name": "loyaltyCurrency",
            "baseName": "LoyaltyCurrency",
            "type": "string"
        },
        {
            "name": "loyaltyTotals",
            "baseName": "LoyaltyTotals",
            "type": "Array<LoyaltyTotals>"
        },
        {
            "name": "loyaltyUnit",
            "baseName": "LoyaltyUnit",
            "type": "TransactionTotals.LoyaltyUnitEnum"
        },
        {
            "name": "operatorID",
            "baseName": "OperatorID",
            "type": "string"
        },
        {
            "name": "paymentCurrency",
            "baseName": "PaymentCurrency",
            "type": "string"
        },
        {
            "name": "paymentInstrumentType",
            "baseName": "PaymentInstrumentType",
            "type": "PaymentInstrumentType"
        },
        {
            "name": "paymentTotals",
            "baseName": "PaymentTotals",
            "type": "Array<PaymentTotals>"
        },
        {
            "name": "pOIID",
            "baseName": "POIID",
            "type": "string"
        },
        {
            "name": "saleID",
            "baseName": "SaleID",
            "type": "string"
        },
        {
            "name": "shiftNumber",
            "baseName": "ShiftNumber",
            "type": "string"
        },
        {
            "name": "totalsGroupID",
            "baseName": "TotalsGroupID",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return TransactionTotals.attributeTypeMap;
    }
}

export namespace TransactionTotals {
    export enum ErrorConditionEnum {
        Aborted = <any> 'Aborted',
        Busy = <any> 'Busy',
        Cancel = <any> 'Cancel',
        DeviceOut = <any> 'DeviceOut',
        InProgress = <any> 'InProgress',
        InsertedCard = <any> 'InsertedCard',
        InvalidCard = <any> 'InvalidCard',
        LoggedOut = <any> 'LoggedOut',
        MessageFormat = <any> 'MessageFormat',
        NotAllowed = <any> 'NotAllowed',
        NotFound = <any> 'NotFound',
        PaymentRestriction = <any> 'PaymentRestriction',
        Refusal = <any> 'Refusal',
        UnavailableDevice = <any> 'UnavailableDevice',
        UnavailableService = <any> 'UnavailableService',
        UnreachableHost = <any> 'UnreachableHost',
        WrongPIN = <any> 'WrongPIN'
    }
    export enum LoyaltyUnitEnum {
        Monetary = <any> 'Monetary',
        Point = <any> 'Point'
    }
}
