/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


export class PlatformPayment {
    /**
    * The capture\'s merchant reference included in the transfer.
    */
    "modificationMerchantReference"?: string;
    /**
    * The capture reference included in the transfer.
    */
    "modificationPspReference"?: string;
    /**
    * The payment\'s merchant reference included in the transfer.
    */
    "paymentMerchantReference"?: string;
    /**
    * Specifies the nature of the transfer. This parameter helps categorize transfers so you can reconcile transactions at a later time, using the Balance Platform Accounting Report for [marketplaces](https://docs.adyen.com/marketplaces/reports-and-fees/balance-platform-accounting-report/) or [platforms](https://docs.adyen.com/platforms/reports-and-fees/balance-platform-accounting-report/).  Possible values:  * **AcquiringFees**: the acquiring fee (the aggregated amount of interchange and scheme fee) incurred on a transaction.  * **AdyenCommission**: the transaction fee due to Adyen under [blended rates](https://www.adyen.com/knowledge-hub/guides/payments-training-guide/get-the-best-from-your-card-processing).  * **AdyenFees**: all transaction fees due to Adyen. This is the aggregated amount of Adyen\'s commission and markup.  * **AdyenMarkup**: the transaction fee due to Adyen under [Interchange++ pricing](https://www.adyen.com/pricing).  * **BalanceAccount**: the amount booked to your user after the deduction of the relevant fees.  * **Commission**: your platform\'s or marketplace\'s commission on a transaction.  * **DCCPlatformCommission**: the Dynamic Currency Conversion (DCC) fee on a transaction.  * **Interchange**: the interchange fee (fee paid to the issuer) incurred on a transaction.  * **PaymentFee**: the aggregated amount of all transaction fees.  * **Remainder**: the leftover amount after currency conversion.  * **SchemeFee**: the scheme fee incurred on a transaction.  * **Surcharge**: the surcharge paid by the customer on a transaction.  * **Tip**: the tip paid by the customer.  * **TopUp**: an incoming transfer to top up your user\'s balance account.  * **VAT**: the value-added tax charged on the payment.
    */
    "platformPaymentType"?: PlatformPayment.PlatformPaymentTypeEnum;
    /**
    * The payment reference included in the transfer.
    */
    "pspPaymentReference"?: string;
    /**
    * **platformPayment**
    */
    "type"?: PlatformPayment.TypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "modificationMerchantReference",
            "baseName": "modificationMerchantReference",
            "type": "string",
            "format": ""
        },
        {
            "name": "modificationPspReference",
            "baseName": "modificationPspReference",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentMerchantReference",
            "baseName": "paymentMerchantReference",
            "type": "string",
            "format": ""
        },
        {
            "name": "platformPaymentType",
            "baseName": "platformPaymentType",
            "type": "PlatformPayment.PlatformPaymentTypeEnum",
            "format": ""
        },
        {
            "name": "pspPaymentReference",
            "baseName": "pspPaymentReference",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PlatformPayment.TypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PlatformPayment.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace PlatformPayment {
    export enum PlatformPaymentTypeEnum {
        AcquiringFees = 'AcquiringFees',
        AdyenCommission = 'AdyenCommission',
        AdyenFees = 'AdyenFees',
        AdyenMarkup = 'AdyenMarkup',
        BalanceAccount = 'BalanceAccount',
        ChargebackRemainder = 'ChargebackRemainder',
        Commission = 'Commission',
        DccPlatformCommission = 'DCCPlatformCommission',
        Default = 'Default',
        Interchange = 'Interchange',
        PaymentFee = 'PaymentFee',
        Remainder = 'Remainder',
        SchemeFee = 'SchemeFee',
        Surcharge = 'Surcharge',
        Tip = 'Tip',
        TopUp = 'TopUp',
        Vat = 'VAT'
    }
    export enum TypeEnum {
        PlatformPayment = 'platformPayment'
    }
}
