/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Address } from "./address";


export class UltimatePartyIdentification {
    "address"?: Address;
    /**
    * The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**.  Allowed only when `type` is **individual**.
    */
    "dateOfBirth"?: string;
    /**
    * The first name of the individual.  Supported characters: [a-z] [A-Z] - . / — and space.  This parameter is: - Allowed only when `type` is **individual**. - Required when `category` is **card**.
    */
    "firstName"?: string;
    /**
    * The full name of the entity that owns the bank account or card.  Supported characters: [a-z] [A-Z] [0-9] , . ; : - — / \\ + & ! ? @ ( ) \" \' and space.  Required when `category` is **bank**.
    */
    "fullName"?: string;
    /**
    * The last name of the individual.  Supported characters: [a-z] [A-Z] - . / — and space.  This parameter is: - Allowed only when `type` is **individual**. - Required when `category` is **card**.
    */
    "lastName"?: string;
    /**
    * A unique reference to identify the party or counterparty involved in the transfer. For example, your client\'s unique wallet or payee ID.  Required when you include `cardIdentification.storedPaymentMethodId`.
    */
    "reference"?: string;
    /**
    * The type of entity that owns the bank account or card.  Possible values: **individual**, **organization**, or **unknown**.  Required when `category` is **card**. In this case, the value must be **individual**.
    */
    "type"?: UltimatePartyIdentification.TypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "Address",
            "format": ""
        },
        {
            "name": "dateOfBirth",
            "baseName": "dateOfBirth",
            "type": "string",
            "format": "date"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string",
            "format": ""
        },
        {
            "name": "fullName",
            "baseName": "fullName",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string",
            "format": ""
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "UltimatePartyIdentification.TypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UltimatePartyIdentification.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace UltimatePartyIdentification {
    export enum TypeEnum {
        Individual = 'individual',
        Organization = 'organization',
        Unknown = 'unknown'
    }
}
