/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { Amount } from "./amount";


export class AmountAdjustment {
    "amount"?: Amount;
    /**
    * The type of markup that is applied to an authorised payment.  Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**.
    */
    "amountAdjustmentType"?: AmountAdjustment.AmountAdjustmentTypeEnum;
    /**
    * The basepoints associated with the applied markup.
    */
    "basepoints"?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "Amount",
            "format": ""
        },
        {
            "name": "amountAdjustmentType",
            "baseName": "amountAdjustmentType",
            "type": "AmountAdjustment.AmountAdjustmentTypeEnum",
            "format": ""
        },
        {
            "name": "basepoints",
            "baseName": "basepoints",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return AmountAdjustment.attributeTypeMap;
    }

    public constructor() {
    }
}

export namespace AmountAdjustment {
    export enum AmountAdjustmentTypeEnum {
        AtmMarkup = 'atmMarkup',
        AuthHoldReserve = 'authHoldReserve',
        Exchange = 'exchange',
        ForexMarkup = 'forexMarkup'
    }
}
