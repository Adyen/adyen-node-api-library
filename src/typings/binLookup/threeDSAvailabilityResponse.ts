/*
 * The version of the OpenAPI document: v54
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import { BinDetail } from './models';
import { DSPublicKeyDetail } from './models';
import { ThreeDS2CardRangeDetail } from './models';


export class ThreeDSAvailabilityResponse {
    'binDetails'?: BinDetail;
    /**
    * List of Directory Server (DS) public keys.
    */
    'dsPublicKeys'?: Array<DSPublicKeyDetail>;
    /**
    * Indicator if 3D Secure 1 is supported.
    */
    'threeDS1Supported'?: boolean;
    /**
    * List of brand and card range pairs.
    */
    'threeDS2CardRangeDetails'?: Array<ThreeDS2CardRangeDetail>;
    /**
    * Indicator if 3D Secure 2 is supported.
    */
    'threeDS2supported'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "binDetails",
            "baseName": "binDetails",
            "type": "BinDetail",
            "format": ""
        },
        {
            "name": "dsPublicKeys",
            "baseName": "dsPublicKeys",
            "type": "Array<DSPublicKeyDetail>",
            "format": ""
        },
        {
            "name": "threeDS1Supported",
            "baseName": "threeDS1Supported",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "threeDS2CardRangeDetails",
            "baseName": "threeDS2CardRangeDetails",
            "type": "Array<ThreeDS2CardRangeDetail>",
            "format": ""
        },
        {
            "name": "threeDS2supported",
            "baseName": "threeDS2supported",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ThreeDSAvailabilityResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

