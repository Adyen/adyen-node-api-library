/*
 * The version of the OpenAPI document: v70
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


import getJsonResponse from "../../helpers/getJsonResponse";
import Service from "../../service";
/* tslint:disable:no-unused-locals */
import { ApplePaySessionResponse } from "../../typings/checkout/models";
import { CheckoutUtilityRequest } from "../../typings/checkout/models";
import { CheckoutUtilityResponse } from "../../typings/checkout/models";
import { CreateApplePaySessionRequest } from "../../typings/checkout/models";
import { IRequest } from "../../typings/requestOptions";
import CheckoutResource from "../resource/checkoutResource";
import { ObjectSerializer } from "../../typings/checkout/models";


export class UtilityApi extends Service {
    /**
     * @summary Get an Apple Pay session
     * @param idempotencyKey A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param createApplePaySessionRequest 
     */
    public async getApplePaySession(createApplePaySessionRequest: CreateApplePaySessionRequest, requestOptions?: IRequest.Options): Promise<ApplePaySessionResponse> {
        const localVarPath = "/applePay/sessions";
        const resource = new CheckoutResource(this, localVarPath);
        const request: CreateApplePaySessionRequest = ObjectSerializer.serialize(createApplePaySessionRequest, "CreateApplePaySessionRequest");
        const response = await getJsonResponse<CreateApplePaySessionRequest, ApplePaySessionResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );
        return ObjectSerializer.deserialize(response, "ApplePaySessionResponse");
    }
    /**
     * @summary Create originKey values for domains
     * @param idempotencyKey A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
     * @param checkoutUtilityRequest 
     */
    public async originKeys(checkoutUtilityRequest: CheckoutUtilityRequest, requestOptions?: IRequest.Options): Promise<CheckoutUtilityResponse> {
        const localVarPath = "/originKeys";
        const resource = new CheckoutResource(this, localVarPath);
        const request: CheckoutUtilityRequest = ObjectSerializer.serialize(checkoutUtilityRequest, "CheckoutUtilityRequest");
        const response = await getJsonResponse<CheckoutUtilityRequest, CheckoutUtilityResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );
        return ObjectSerializer.deserialize(response, "CheckoutUtilityResponse");
    }
}
