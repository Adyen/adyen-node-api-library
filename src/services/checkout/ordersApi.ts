/*
 * The version of the OpenAPI document: v71
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */

import getJsonResponse from "../../helpers/getJsonResponse";
import Service from "../../service";
import Client from "../../client";
import { 
    BalanceCheckRequest,
    BalanceCheckResponse,
    CancelOrderRequest,
    CancelOrderResponse,
    CreateOrderRequest,
    CreateOrderResponse,
    ObjectSerializer
} from "../../typings/checkout/models";
import { IRequest } from "../../typings/requestOptions";
import Resource from "../resource";

export class OrdersApi extends Service {

    private readonly API_BASEPATH: string = "https://checkout-test.adyen.com/v71";
    private baseUrl: string;

    public constructor(client: Client){
        super(client);
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }

    /**
    * @summary Cancel an order
    * @param cancelOrderRequest {@link CancelOrderRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link CancelOrderResponse }
    */
    public async cancelOrder(cancelOrderRequest: CancelOrderRequest, requestOptions?: IRequest.Options): Promise<CancelOrderResponse> {
        const endpoint = `${this.baseUrl}/orders/cancel`;
        const resource = new Resource(this, endpoint);
        const request: CancelOrderRequest = ObjectSerializer.serialize(cancelOrderRequest, "CancelOrderRequest");
        const response = await getJsonResponse<CancelOrderRequest, CancelOrderResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );
        return ObjectSerializer.deserialize(response, "CancelOrderResponse");
    }

    /**
    * @summary Get the balance of a gift card
    * @param balanceCheckRequest {@link BalanceCheckRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link BalanceCheckResponse }
    */
    public async getBalanceOfGiftCard(balanceCheckRequest: BalanceCheckRequest, requestOptions?: IRequest.Options): Promise<BalanceCheckResponse> {
        const endpoint = `${this.baseUrl}/paymentMethods/balance`;
        const resource = new Resource(this, endpoint);
        const request: BalanceCheckRequest = ObjectSerializer.serialize(balanceCheckRequest, "BalanceCheckRequest");
        const response = await getJsonResponse<BalanceCheckRequest, BalanceCheckResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );
        return ObjectSerializer.deserialize(response, "BalanceCheckResponse");
    }

    /**
    * @summary Create an order
    * @param createOrderRequest {@link CreateOrderRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link CreateOrderResponse }
    */
    public async orders(createOrderRequest: CreateOrderRequest, requestOptions?: IRequest.Options): Promise<CreateOrderResponse> {
        const endpoint = `${this.baseUrl}/orders`;
        const resource = new Resource(this, endpoint);
        const request: CreateOrderRequest = ObjectSerializer.serialize(createOrderRequest, "CreateOrderRequest");
        const response = await getJsonResponse<CreateOrderRequest, CreateOrderResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );
        return ObjectSerializer.deserialize(response, "CreateOrderResponse");
    }
}
