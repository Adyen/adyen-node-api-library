/*
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


import getJsonResponse from "../../helpers/getJsonResponse";
import Service from "../../service";
import Client from "../../client";
import { IRequest } from "../../typings/requestOptions";
import Resource from "../resource";

import { ObjectSerializer } from "../../typings/openBanking/objectSerializer";
import { AccountVerificationReportResponse } from "../../typings/openBanking/models";
import { AccountVerificationRoutesRequest } from "../../typings/openBanking/models";
import { AccountVerificationRoutesResponse } from "../../typings/openBanking/models";

/**
 * API handler for AccountVerificationApi
 */
export class AccountVerificationApi extends Service {

    private readonly API_BASEPATH: string = "https://obgateway-test.adyen.com/obgateway/v1";
    private baseUrl: string;

    public constructor(client: Client){
        super(client);
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }

    /**
    * @summary Create routes for account verification
    * @param accountVerificationRoutesRequest {@link AccountVerificationRoutesRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link AccountVerificationRoutesResponse }
    */
    public async createAccountVerificationRoutes(accountVerificationRoutesRequest: AccountVerificationRoutesRequest, requestOptions?: IRequest.Options): Promise<AccountVerificationRoutesResponse> {
        const endpoint = `${this.baseUrl}/accountVerification/routes`;
        const resource = new Resource(this, endpoint);
        
        const request: AccountVerificationRoutesRequest = ObjectSerializer.serialize(accountVerificationRoutesRequest, "AccountVerificationRoutesRequest");
        const response = await getJsonResponse<AccountVerificationRoutesRequest, AccountVerificationRoutesResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "AccountVerificationRoutesResponse");
    }

    /**
    * @summary Get account verification report
    * @param code {@link string } The unique code you receive after a successful open banking flow that is included as a query parameter in the &#x60;redirectUrl&#x60; callback.
    * @param requestOptions {@link IRequest.Options }
    * @return {@link AccountVerificationReportResponse }
    */
    public async getAccountVerificationReport(code: string, requestOptions?: IRequest.Options): Promise<AccountVerificationReportResponse> {
        const endpoint = `${this.baseUrl}/accountVerification/reports/{code}`
            .replace("{" + "code" + "}", encodeURIComponent(String(code)));
        const resource = new Resource(this, endpoint);
        
        const response = await getJsonResponse<string, AccountVerificationReportResponse>(
            resource,
            "",
            { ...requestOptions, method: "GET" }
        );

        return ObjectSerializer.deserialize(response, "AccountVerificationReportResponse");
    }

}
