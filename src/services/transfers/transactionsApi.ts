/*
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


import getJsonResponse from "../../helpers/getJsonResponse";
import Service from "../../service";
import Client from "../../client";
import { IRequest } from "../../typings/requestOptions";
import Resource from "../resource";

import { ObjectSerializer } from "../../typings/transfers/objectSerializer";
import { Transaction } from "../../typings/transfers/models";
import { TransactionSearchResponse } from "../../typings/transfers/models";

/**
 * API handler for TransactionsApi
 */
export class TransactionsApi extends Service {

    private readonly API_BASEPATH: string = "https://balanceplatform-api-test.adyen.com/btl/v4";
    private baseUrl: string;

    public constructor(client: Client){
        super(client);
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }

    /**
    * @summary Get all transactions
    * @param requestOptions {@link IRequest.Options }
    * @param createdSince {@link Date } (Required) Only include transactions that have been created on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.
    * @param createdUntil {@link Date } (Required) Only include transactions that have been created on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.
    * @param balancePlatform {@link string } The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).  Required if you don\&#39;t provide a &#x60;balanceAccountId&#x60; or &#x60;accountHolderId&#x60;.
    * @param paymentInstrumentId {@link string } The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).  To use this parameter, you must also provide a &#x60;balanceAccountId&#x60;, &#x60;accountHolderId&#x60;, or &#x60;balancePlatform&#x60;.  The &#x60;paymentInstrumentId&#x60; must be related to the &#x60;balanceAccountId&#x60; or &#x60;accountHolderId&#x60; that you provide.
    * @param accountHolderId {@link string } The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).  Required if you don\&#39;t provide a &#x60;balanceAccountId&#x60; or &#x60;balancePlatform&#x60;.  If you provide a &#x60;balanceAccountId&#x60;, the &#x60;accountHolderId&#x60; must be related to the &#x60;balanceAccountId&#x60;.
    * @param balanceAccountId {@link string } The unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).  Required if you don\&#39;t provide an &#x60;accountHolderId&#x60; or &#x60;balancePlatform&#x60;.  If you provide an &#x60;accountHolderId&#x60;, the &#x60;balanceAccountId&#x60; must be related to the &#x60;accountHolderId&#x60;.
    * @param cursor {@link string } The &#x60;cursor&#x60; returned in the links of the previous response.
    * @param sortOrder {@link &#39;asc&#39; | &#39;desc&#39; } The transactions sorting order.  Possible values:   - **asc**: Ascending order, from older to most recent.  - **desc**: Descending order, from most recent to older.
    * @param limit {@link number } The number of items returned per page, maximum of 100 items. By default, the response returns 10 items per page.
    * @return {@link TransactionSearchResponse }
    */
    public async getAllTransactions(createdSince: Date, createdUntil: Date, balancePlatform?: string, paymentInstrumentId?: string, accountHolderId?: string, balanceAccountId?: string, cursor?: string, sortOrder?: "asc" | "desc", limit?: number, requestOptions?: IRequest.Options): Promise<TransactionSearchResponse> {
        const endpoint = `${this.baseUrl}/transactions`;
        const resource = new Resource(this, endpoint);
        
        const hasDefinedQueryParams = balancePlatform ?? paymentInstrumentId ?? accountHolderId ?? balanceAccountId ?? cursor ?? createdSince ?? createdUntil ?? sortOrder ?? limit;
        if(hasDefinedQueryParams) {
            if(!requestOptions) requestOptions = {};
            if(!requestOptions.params) requestOptions.params = {};
            if(balancePlatform) requestOptions.params["balancePlatform"] = balancePlatform;
            if(paymentInstrumentId) requestOptions.params["paymentInstrumentId"] = paymentInstrumentId;
            if(accountHolderId) requestOptions.params["accountHolderId"] = accountHolderId;
            if(balanceAccountId) requestOptions.params["balanceAccountId"] = balanceAccountId;
            if(cursor) requestOptions.params["cursor"] = cursor;
            if(createdSince) requestOptions.params["createdSince"] = createdSince.toISOString();
            if(createdUntil) requestOptions.params["createdUntil"] = createdUntil.toISOString();
            if(sortOrder) requestOptions.params["sortOrder"] = sortOrder;
            if(limit) requestOptions.params["limit"] = limit;
        }
        const response = await getJsonResponse<string, TransactionSearchResponse>(
            resource,
            "",
            { ...requestOptions, method: "GET" }
        );

        return ObjectSerializer.deserialize(response, "TransactionSearchResponse");
    }

    /**
    * @summary Get a transaction
    * @param id {@link string } The unique identifier of the transaction.
    * @param requestOptions {@link IRequest.Options }
    * @return {@link Transaction }
    */
    public async getTransaction(id: string, requestOptions?: IRequest.Options): Promise<Transaction> {
        const endpoint = `${this.baseUrl}/transactions/{id}`
            .replace("{" + "id" + "}", encodeURIComponent(String(id)));
        const resource = new Resource(this, endpoint);
        
        const response = await getJsonResponse<string, Transaction>(
            resource,
            "",
            { ...requestOptions, method: "GET" }
        );

        return ObjectSerializer.deserialize(response, "Transaction");
    }

}
