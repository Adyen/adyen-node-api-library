/*
 * The version of the OpenAPI document: v68
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */


import getJsonResponse from "../../helpers/getJsonResponse";
import Service from "../../service";
import Client from "../../client";
import { IRequest } from "../../typings/requestOptions";
import Resource from "../resource";

import { ObjectSerializer } from "../../typings/payment/objectSerializer";
import { AuthenticationResultRequest } from "../../typings/payment/models";
import { AuthenticationResultResponse } from "../../typings/payment/models";
import { PaymentRequest } from "../../typings/payment/models";
import { PaymentRequest3d } from "../../typings/payment/models";
import { PaymentRequest3ds2 } from "../../typings/payment/models";
import { PaymentResult } from "../../typings/payment/models";
import { ThreeDS2ResultRequest } from "../../typings/payment/models";
import { ThreeDS2ResultResponse } from "../../typings/payment/models";

/**
 * API handler for PaymentsApi
 */
export class PaymentsApi extends Service {

    private readonly API_BASEPATH: string = "https://pal-test.adyen.com/pal/servlet/Payment/v68";
    private baseUrl: string;

    public constructor(client: Client){
        super(client);
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }

    /**
    * @summary Create an authorisation
    * @param paymentRequest {@link PaymentRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link PaymentResult }
    */
    public async authorise(paymentRequest: PaymentRequest, requestOptions?: IRequest.Options): Promise<PaymentResult> {
        const endpoint = `${this.baseUrl}/authorise`;
        const resource = new Resource(this, endpoint);
        
        const request: PaymentRequest = ObjectSerializer.serialize(paymentRequest, "PaymentRequest");
        const response = await getJsonResponse<PaymentRequest, PaymentResult>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "PaymentResult");
    }

    /**
    * @summary Complete a 3DS authorisation
    * @param paymentRequest3d {@link PaymentRequest3d } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link PaymentResult }
    */
    public async authorise3d(paymentRequest3d: PaymentRequest3d, requestOptions?: IRequest.Options): Promise<PaymentResult> {
        const endpoint = `${this.baseUrl}/authorise3d`;
        const resource = new Resource(this, endpoint);
        
        const request: PaymentRequest3d = ObjectSerializer.serialize(paymentRequest3d, "PaymentRequest3d");
        const response = await getJsonResponse<PaymentRequest3d, PaymentResult>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "PaymentResult");
    }

    /**
    * @summary Complete a 3DS2 authorisation
    * @param paymentRequest3ds2 {@link PaymentRequest3ds2 } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link PaymentResult }
    */
    public async authorise3ds2(paymentRequest3ds2: PaymentRequest3ds2, requestOptions?: IRequest.Options): Promise<PaymentResult> {
        const endpoint = `${this.baseUrl}/authorise3ds2`;
        const resource = new Resource(this, endpoint);
        
        const request: PaymentRequest3ds2 = ObjectSerializer.serialize(paymentRequest3ds2, "PaymentRequest3ds2");
        const response = await getJsonResponse<PaymentRequest3ds2, PaymentResult>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "PaymentResult");
    }

    /**
    * @summary Get the 3DS authentication result
    * @param authenticationResultRequest {@link AuthenticationResultRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link AuthenticationResultResponse }
    */
    public async getAuthenticationResult(authenticationResultRequest: AuthenticationResultRequest, requestOptions?: IRequest.Options): Promise<AuthenticationResultResponse> {
        const endpoint = `${this.baseUrl}/getAuthenticationResult`;
        const resource = new Resource(this, endpoint);
        
        const request: AuthenticationResultRequest = ObjectSerializer.serialize(authenticationResultRequest, "AuthenticationResultRequest");
        const response = await getJsonResponse<AuthenticationResultRequest, AuthenticationResultResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "AuthenticationResultResponse");
    }

    /**
    * @summary Get the 3DS2 authentication result
    * @param threeDS2ResultRequest {@link ThreeDS2ResultRequest } 
    * @param requestOptions {@link IRequest.Options }
    * @return {@link ThreeDS2ResultResponse }
    */
    public async retrieve3ds2Result(threeDS2ResultRequest: ThreeDS2ResultRequest, requestOptions?: IRequest.Options): Promise<ThreeDS2ResultResponse> {
        const endpoint = `${this.baseUrl}/retrieve3ds2Result`;
        const resource = new Resource(this, endpoint);
        
        const request: ThreeDS2ResultRequest = ObjectSerializer.serialize(threeDS2ResultRequest, "ThreeDS2ResultRequest");
        const response = await getJsonResponse<ThreeDS2ResultRequest, ThreeDS2ResultResponse>(
            resource,
            request,
            { ...requestOptions, method: "POST" }
        );

        return ObjectSerializer.deserialize(response, "ThreeDS2ResultResponse");
    }

}
